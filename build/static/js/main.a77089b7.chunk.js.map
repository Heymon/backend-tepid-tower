{"version":3,"sources":["assets/16bitcharacter.jpg","components/Player/Player.js","components/Platform/Platform.js","components/Platform/PlatformContainer.js","assets/Fogo-Animado-png.gif","components/DeathZone/DeathZone.js","recoil/atoms.js","recoil/components/GetGameState.js","components/Game/Game.js","components/LeftSection/LeftSection.js","models/auth.js","recoil/components/GetResetState.js","components/ControlsModal/ControlsModal.js","models/leaderboard.js","components/LeaderboardModal/LeaderboardModal.js","recoil/components/GetUserState.js","components/UserModal/UserModal.js","components/GameOverModal/GameOverModal.js","components/RightSection/RightSection.js","pages/Landing.js","reportWebVitals.js","index.js"],"names":["Player","id","style","transform","this","props","playerInfo","playerTargetY","playerTargetX","transition","speed","src","character","React","Component","Platform","state","platformId","setState","idKey","className","margin","xAxis","width","height","backgroundColor","color","PlatformContainer","currentPlatformId","platforms","numOfPlatforms","generatePlatforms","prePlatforms","idGenerator","console","log","index","unshift","getRandomPos","max","Math","floor","random","addPlatform","gameWindow","newPlatform","pop","scrollTop","setGameAtBegining","levelWindow","document","querySelector","scrollTo","scrollHeight","setEvents","addEventListener","resetPlatforms","setTimeout","prevProps","curPlatform","reset","DeathZone","display","marginTop","window","innerHeight","fogo","userState","atom","key","default","gameState","resetState","userPoints","GetGameState","useRecoilState","gameStatus","setGameStatus","points","setPoints","prevStatusRef","useRef","useEffect","current","status","Game","playerLanded","playerJumping","playerFalling","playerIsLanding","jumpGauge","gauge","isScrolling","scrollingFunc","scrollingSpeed","scrollingAdjustment","movementToggle","movementFunc","mobileCheck","a","check","navigator","userAgent","vendor","opera","test","substr","quaternionToEuler","quaternion","pitch","sinr_cosp","cosr_cosp","atan2","sinp","abs","PI","sign","asin","siny_cosp","cosy_cosp","toFixed","getPlayerCurPos","playerEl","getElementById","x","y","getBoundingClientRect","lateralMove","movementTarget","stopMovement","pos","jump","amount","playerTarget","land","checkAllPlatforms","getAttribute","startScrolling","once","checkLanding","platformEl","playerCurPos","platformPos","left","right","landPos","top","platform","platformEls","querySelectorAll","isLandingOnPlatform","i","length","towerBottom","distance","scroll","levelScrolling","setInterval","gameOver","clearInterval","resetGame","playerMeasurement","initPosX","innerWidth","initPosY","controllerJump","isBeginningPress","prevState","controllerMovementRight","rightBorder","curPos","controllerMovementLeft","leftBorder","handleMobileJump","e","target","nodeName","preventDefault","handleKeyboardMovement","activeElement","code","Promise","all","permissions","query","name","then","results","every","result","sensor","AbsoluteOrientationSensor","frequency","referenceFrame","start","onreading","onerror","event","error","message","warn","LeftSection","URL","process","AuthModel","register","data","fetch","method","headers","body","JSON","stringify","response","json","login","show","authorization","localStorage","uid","edit","addScore","addFriend","delete","GetResetState","setResetStatus","prevResetRef","prevReset","ControlsModal","LeaderboardModel","showGlobal","LeaderboardModal","useState","users","setUsers","getUsers","curProfiles","array","onClick","span","map","item","username","highscore","country","GetUserState","user","setUser","UserModal","curUser","undefined","friendEmail","email","password","createResponseMessage","element","createElement","appendChild","createTextNode","setAttribute","type","clearInput","inputName","elInputList","value","handleSubmit","stopPropagation","form","responseMessage","remove","field","foundUser","profile","setItem","signedJwt","isReseting","changeModal","score","playAgainFunc","updatedUser","classList","contains","removeItem","onSubmit","required","onChange","placeholder","GameOverModal","signUpFunc","RightSection","userModal","class_name","isModalOn","popUps","removeEventListener","handleMenuOff","handleUserOpt","handleLeaderboardOpt","handleControlsOpt","handleGameRestart","handleHamburguerMenu","hamburguerMenu","parentElement","hamburguerMenuCSS","getComputedStyle","elIconList","closest","loggingIn","stillOver","submitHandler","Landing","resetStatus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a77089b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/16bitcharacter.156d5fea.jpg\";","import React from \"react\";\nimport character from\"../../assets/16bitcharacter.jpg\"\n\nimport './Player.css';\n\nclass Player extends React.Component{\n    render() {\n        return(\n            <div id=\"player\" style={{\n                // transform: `translateX(550px) translateY(840px)`,\n                transform: `translateY(${this.props.playerInfo.playerTargetY}px) translateX(${this.props.playerInfo.playerTargetX}px)` ,\n                transition: `${this.props.playerInfo.speed}s linear`\n                }}>\n                    <img src={character} />\n                </div>\n        )\n    }\n}\n\nexport default Player;","import React from 'react';\n\nimport './Platform.css'\nclass Platform extends React.Component {\n\n    state = {\n        platformId: 0,\n\n    }\n\n    componentDidMount() {\n        this.setState({platformId: this.props.idKey})\n    }\n    render() {\n\n        return(\n            <div className=\"platform\" id={this.state.platformId} style={{margin: `96px 0 56px ${this.props.xAxis}%`, width: \"60px\", height: \"10px\", backgroundColor: `${this.props.color}`}}>\n                {/* {`p${this.state.platformId}`} */}\n            </div>\n        )\n    }\n    \n}\n\nexport default Platform;","import React from 'react';\n\nimport Platform from './Platform';\n\nclass PlatformContainer extends React.Component {\n\n    state = {\n        currentPlatformId: 0,\n        platforms: [],\n        numOfPlatforms: 10\n    }\n\n    componentDidMount(props) {\n        this.setEvents();\n        this.generatePlatforms();\n    }\n\n    componentDidUpdate(prevProps) {\n        // console.log(\"when\");\n        const gameWindow = document.querySelector(\".game\")\n        // console.log(gameWindow.scrollTop && props.curPlatform > 2);\n        if (gameWindow.scrollTop <= 100 && this.props.curPlatform > 2) {\n            console.log(this.props);\n            this.addPlatform(gameWindow);\n        } \n        if(prevProps.reset === false && this.props.reset) {\n            console.log(\"false\")\n            this.resetPlatforms();\n            // this.generatePlatforms();\n            // if (this.props.reset !== prevProps.reset) {\n            //     console.log(\"reset\")\n            //     // this.resetPlatforms();\n            //     // this.generatePlatforms();\n                \n            // }\n        }\n    }\n\n    generatePlatforms = () => {\n\n        const prePlatforms = [];\n        let idGenerator = this.state.currentPlatformId;\n        console.log(idGenerator);\n        for (let index = 0; index < this.state.numOfPlatforms; index++) {\n            idGenerator++;\n            prePlatforms.unshift(<Platform xAxis={this.getRandomPos(81)} color={\"red\"} key={idGenerator} idKey={idGenerator}/>);\n            \n        }\n        console.log(prePlatforms);\n        this.setState({platforms: prePlatforms, currentPlatformId: idGenerator});\n        return this.state.platforms\n\n    }\n\n    getRandomPos = (max) => {\n        // const randomNum = Math.floor(Math.random() * (max+1));\n        return Math.floor(Math.random() * (max+1))\n    }\n\n    addPlatform = (gameWindow) => {\n        const prePlatforms = this.state.platforms;\n        let idGenerator = this.state.currentPlatformId;\n        idGenerator++;\n        const newPlatform = <Platform xAxis={this.getRandomPos(81)} color={(idGenerator < 20 ? \"blue\" : \"green\")} key={idGenerator} idKey={idGenerator}/>\n        console.log(\"added platform\");\n        \n        prePlatforms.pop();\n        prePlatforms.unshift(newPlatform);\n\n        // const previousScrollTop = gameWindow.scrollTop;\n        this.setState({platforms: prePlatforms, currentPlatformId: idGenerator});\n        console.log(gameWindow.scrollTop);\n        // console.log(gameWindow.scrollTop = previousScrollTop + 106);\n        // console.log(\"does it reach here\")\n    }\n\n    setGameAtBegining = () =>{\n        console.log(\"set twice?\")\n        const levelWindow = document.querySelector(\".game\")\n        levelWindow.scrollTo(0, levelWindow.scrollHeight);\n         \n    }\n\n    setEvents = () =>{\n        document.addEventListener('DOMContentLoaded', this.setGameAtBegining);\n\n        // document.addEventListener('click', () => {\n        //     console.log(\"deu\")  \n        //     const levelWindow = document.querySelector(\".game\")\n        //     this.addPlatform(levelWindow);\n\n                    \n        //   });\n  \n    }\n\n    resetPlatforms = () => {\n\n        \n        this.setState({\n            currentPlatformId: 0,\n            platforms: [],\n            numOfPlatforms: 10\n        });\n        \n        setTimeout(() => {\n            this.generatePlatforms();\n            this.setGameAtBegining();\n        }, 100); \n    }\n\n\n    render() {\n        return (\n            <>\n            {this.state.platforms}\n            </>\n        )\n    }\n}\n\nexport default PlatformContainer;","export default __webpack_public_path__ + \"static/media/Fogo-Animado-png.42248e57.gif\";","import React from \"react\"\nimport fogo from '../../assets/Fogo-Animado-png.gif';\nimport \"./DeathZone.css\"\n\nfunction DeathZone(props) {\n\n    return (\n        <div className=\"deathzone\" style ={(props.display ? {display: \"flex\", marginTop: `${window.innerHeight -50}px`}: {display: \"none\", marginTop: `${window.innerHeight - 50}px`})}>\n            <div><img src={fogo}/></div>\n            <div><img src={fogo}/></div>\n            <div><img src={fogo}/></div>\n            <div><img src={fogo}/></div>\n            <div><img src={fogo}/></div>\n            <div><img src={fogo}/></div>\n        </div>\n    )\n    \n}\n\nexport default DeathZone;","import {atom} from \"recoil\";\n\nexport const userState = atom({\n    key: \"userState\",\n    default: null,\n});\n\nexport const gameState = atom({\n    key: \"gameState\",\n    default: true,\n});\n\nexport const resetState = atom({\n    key: \"resetState\",\n    default: false,\n});\n\nexport const userPoints = atom({\n    key: \"userPoints\",\n    default: 0,\n});","import React, { useEffect, useRef }  from 'react';\n\nimport {gameState} from \"../../recoil/atoms\"\nimport {useRecoilState} from \"recoil\";\nimport {userPoints} from \"../../recoil/atoms\"\nimport {resetState} from \"../../recoil/atoms\"\n\n\nfunction GetGameState(props) {\n\n    const [gameStatus,setGameStatus] = useRecoilState(gameState);\n    const [reset,setResetStatus] = useRecoilState(resetState);\n    const [points,setPoints] = useRecoilState(userPoints);\n    \n    const prevStatusRef = useRef();\n    useEffect(() => {\n        prevStatusRef.current = gameStatus;\n    });\n    const prevStatus = prevStatusRef.current;\n\n    useEffect(function () {\n        setPoints(props.points);\n        console.log(points);\n        setGameStatus(props.status);\n        \n        // console.log(\"checking user\", prevStatus, props, gameStatus);\n        \n      },[props]);\n\n    // console.log(user);\n\n\n    console.log(\"this.works\");\n    \n\n\n\n    return null\n}\n\nexport default GetGameState;","import React from \"react\";\nimport {AbsoluteOrientationSensor} from \"motion-sensors-polyfill\";\n\nimport './Game.css'\n\nimport Player from \"../Player/Player\";\nimport PlatformContainer from \"../Platform/PlatformContainer\";\nimport DeathZone from \"../DeathZone/DeathZone\";\n\nimport GetGameState from \"../../recoil/components/GetGameState\";\n\nclass Game extends React.Component {\n\n    state = {\n        gameStatus:true,\n\n        playerTargetY: 0,\n        playerTargetX: 0,\n        // playerRotation: 0,\n\n        playerLanded: true,\n        playerJumping: false,\n        playerFalling: false,\n        playerIsLanding: false,\n\n        speed:0,\n        jumpGauge: 5,\n        gauge: null,\n\n        curPlatform: null,\n\n        isScrolling: false,\n        scrollingFunc: 0,\n        scrollingSpeed: 5,\n        scrollingAdjustment: 5,//FIXME bug on phone the velocity is not enough for when scrolling so player never reachs platform; 5.3 works on phone for some reason\n\n        points:0,\n\n        //for testing\n        movementToggle: false,\n        movementFunc: 0,\n\n    }\n\n    /* FUNCTIONAL METHODS */\n\n    /**\n     * regex from detectmobilebrowsers.com to check if it is a mobile \n     *   */\n    mobileCheck = () => { \n        let check = false;\n        (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n        return check;\n      };\n    \n    /** \n     * source https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles\n     * \n      */\n    quaternionToEuler = (quaternion) => {\n        // let eulerAngles = [];\n        let roll = 0;\n        let pitch = 0;\n        let yaw = 0;\n\n        // roll (x-axis rotation)\n        let sinr_cosp = 2 * (quaternion[3] * quaternion[0] + quaternion[1] * quaternion[2]);\n        let cosr_cosp = 1 - 2 * (quaternion[0] * quaternion[0] + quaternion[1] * quaternion[1]);\n        roll = Math.atan2(sinr_cosp, cosr_cosp);\n\n        // pitch (y-axis rotation)\n        let sinp = 2 * (quaternion[3] * quaternion[1] - quaternion[2] * quaternion[0]);\n        if (Math.abs(sinp) >= 1){\n\n            pitch = ((Math.PI/2)*Math.sign(sinp)); // use 90 degrees if out of range\n        }\n        else{\n\n            pitch = Math.asin(sinp);\n        }\n\n        // yaw (z-axis rotation)\n        let siny_cosp = 2 * (quaternion[3] * quaternion[2] + quaternion[0] * quaternion[1]);\n        let cosy_cosp = 1 - 2 * (quaternion[1] * quaternion[1] + quaternion[2] * quaternion[2]);\n        yaw = Math.atan2(siny_cosp, cosy_cosp);\n\n        // console.log(`roll ${roll.toFixed(3)} pitch ${pitch.toFixed(3)} yaw ${yaw.toFixed(3)}`);\n\n        return pitch.toFixed(3);\n    }\n\n    /* LIFECYCLE COMPONENT METHODS */\n\n    componentDidMount () {\n        if(this.mobileCheck()){\n            // from https://developer.mozilla.org/en-US/docs/Web/API/RelativeOrientationSensor\n            Promise.all([navigator.permissions.query({ name: \"accelerometer\"}), \n                        navigator.permissions.query({ name: \"gyroscope\"})])\n                    .then(results => {\n                        if (results.every(result => result.state === \"granted\")) {\n                            console.log('Permission to use Accelerometer & Gyroscope sensor granted.');\n\n                            let sensor = new AbsoluteOrientationSensor({frequency: 30, referenceFrame: 'device'});\n\n                            sensor.start();\n\n                            sensor.onreading = () => {//NOTE maybe use roll to check if it is to backwards or not\n                                // if (!this.state.isInitQuaternionSet) this.setState({initialQuaternion: sensor.quaternion.map(x => x.toFixed(3)), isInitQuaternionSet: true})\n                                // console.log(\"Relative orientaion \" + sensor.quaternion.map(x => x.toFixed(3)));//more tha 45 ->  less than 35 <-\n                                let pitch = this.quaternionToEuler(sensor.quaternion);\n                                // console.log(`intial ${this.state.initialQuaternion[1]}`);\n                                // console.log(`current ${sensor.quaternion[1]}`);\n                                // if(Math.abs(sensor.quaternion[1]) - Math.abs(this.state.initialQuaternion[1]) <= -0.05){\n                                // let stop = (pitch >= -0.3 && pitch <= 0.3) ? true : false;\n                                // console.log(\"heyyyyyyyyyyy \",stop)\n                                if((pitch >= -0.3 && pitch <= 0.3)){//TODO after adding a recoil state for isModalOn check to stop movement\n                                    \n                                    /* const rightBorder = (window.innerWidth/2) + (320/2);\n                                    const leftBorder = (window.innerWidth/2) - (320/2);\n                                    const curPos = this.getPlayerCurPos();\n                                    if( curPos.x + curPos.width >= rightBorder || curPos.x <= leftBorder){\n                                        console.log(\"should stop; up rightwalldeath\");\n                                        this.gameOver();\n                                        this.stopMovement({x: rightBorder - curPos.width, y: this.state.playerTargetY}, 0);\n\n                                    } else {\n                                        this.stopMovement(this.getPlayerCurPos());\n                                    }\n                                    if(this.state.playerFalling === true ){\n                                        this.checkAllPlatforms();\n\n                                    } */\n\n                                    if (this.state.playerTargetX === window.innerWidth) {\n                                        this.controllerMovementRight(false);\n                                        return;\n                                    }\n                                    if (this.state.playerTargetX === 0) {\n                                        this.controllerMovementRight(false);\n                                        return;\n                                    }\n\n                                // } else if(Math.abs(sensor.quaternion[1]) - Math.abs(this.state.initialQuaternion[1]) >= 0.05) {\n                                } else if(pitch > 0.3){\n                                    // console.log(\"Relative orientaion pointing right\");//more tha 45 ->  less than 35 <-\n                                    this.controllerMovementRight(true);\n                                } else if(pitch < -0.3) {\n                                    // console.log(\"Relative orientaion pointing left\");//more tha 45 ->  less than 35 <-\n                                    this.controllerMovementLeft(true);\n                                }  \n                            }\n\n                            sensor.onerror = event => console.log(event.error.name, event.error.message);\n                            this.handleMobileJump();\n                        }\n                    })\n        } else {\n            // TODO handle keyboard\n        };\n        \n\n        const playerMeasurement = this.getPlayerCurPos();\n        // sets player initial position\n        const initPosX = window.innerWidth/2 - playerMeasurement.width/2; //at the middle of the x AXIS\n        const initPosY = window.innerHeight - playerMeasurement.height; //at the bottom of the screen// the subtration of 18 is to take in account the playr height\n        this.setState({playerTargetX: initPosX, playerTargetY: initPosY});\n        this.handleKeyboardMovement();\n\n    }\n\n    componentDidUpdate (prevState, prevProps) {\n        console.warn(\"testingsorry\");\n        console.log(this.props.reset);\n        if(this.props.reset) {\n            console.log(\"reset\");\n            if(!this.state.gameStatus)this.resetGame()\n        }\n        \n        if (this.state.isScrolling) {\n            const playerCurPos = this.getPlayerCurPos();\n            if (playerCurPos.y + playerCurPos.height >= window.innerHeight - 25) {//NOTE maybe in the future instead of this create a event for when the animation ends, i.e when the animation ends at the bottom or when the animaton ends at the side wall (on phone the side wall is the playerTargetX)\n                console.log(\"should stop; didupdate bottomdeath\");\n                return this.gameOver()\n            }\n        }\n\n        if(this.state.speed <= 0.2) {//if the speed was increase for fixing position//NOTE this might be the reason why the speed is not picking up on mobile so if instead we create a listener for when the faster animation is over to sow down again that might work\n            console.log(\"slowing\");\n            if(prevState.playerTargetX === window.innerWidth || prevState.playerTargetX === 0){// and the player was moving \n                this.setState({speed: 1.5, playerTargetX: prevState.playerTargetX})//set the movement back to normal\n            }\n        }\n\n        if (this.state.curPlatform !== null) {//if the player is on top of a platform\n            const playerCurPos = this.getPlayerCurPos();\n            const platformPos = this.state.curPlatform.getBoundingClientRect()\n            // after a movement check to see if he is still on top  of said platform\n            if ((\n                playerCurPos.x > platformPos.left &&     \n                playerCurPos.x < platformPos.right\n                ) || (\n                playerCurPos.x + playerCurPos.width > platformPos.left && \n                playerCurPos.x + playerCurPos.width < platformPos.right\n                )) {\n                // console.log(\"should not fall\");\n            } else {//if they are not on top make them fall and check possible landings \n                if(!this.state.playerFalling && !this.state.playerJumping && this.state.playerLanded) {\n                    // console.log(\"should fall\")\n                    this.setState({playerFalling: true, playerLanded: false})\n                    // this.checkAllPlatforms();\n                    this.land(this.checkAllPlatforms());\n                }\n            }\n        }\n    }\n\n    /* PLAYER MOVEMENT FUCNTIONS */\n\n    // gets the player position current position on screen\n    getPlayerCurPos = () => {\n        const playerEl = document.getElementById('player');\n        if(playerEl === null) return {x:0,y:0,height:0,width:0};\n        const playerCurPos = playerEl.getBoundingClientRect();\n        // console.log(playerCurPos);\n        return playerCurPos;\n    }\n\n    // they way movement works is by setting the target at either far right or far left on key down\n    //then on key up set the target to the players current position making them stop\n    lateralMove = (movementTarget) => {\n        console.log(\"how many times\");\n        this.setState({playerTargetX: movementTarget, speed: 1.5})\n    }\n\n    stopMovement = (pos, speed=1.5) => {\n        this.setState({playerTargetX: pos.x, speed});\n    }\n\n    // on key down the jump gauge starts at 5 and goes up to 10 depending when release//key up\n    // then similar to lateral movement the jump sets the target to a distance equivalent to the top of the screen\n    //(in this case 840px so if the player is at a platform the jump will be set at -840 from that position) and\n    // starts a timeout with the duration being multiplied by the gauge set on keydown so\n    // that instead of reaching the top of the screen when the timeout runs the process of falling starts\n    jump = (amount) => {\n        // if not jumping or in the ground\n        if (this.state.playerJumping === false && this.state.playerLanded === true) {\n            \n            // then similar to lateral movement the jump sets the target to a distance equivalent to the top of the screen\n            const playerTarget = this.state.playerTargetY + amount;\n            this.setState({playerTargetY: playerTarget, speed: 1.5, playerJumping: true, playerLanded: false});\n\n            // starts a timeout with the duration being multiplied by the gauge set on keydown\n            setTimeout(() => {\n                // this.checkAllPlatforms()//check all platform to define where player should land including the bottom\n                \n                this.land(this.checkAllPlatforms());//sets event Listener to confirm the landing\n            }, 48 * this.state.jumpGauge)\n\n        }\n    }\n\n    //sets event Listener to confirm the landing\n    land = (curPlatform) => {\n        const playerEl = document.getElementById('player');\n        if (!this.state.playerIsLanding) {\n            playerEl.addEventListener('transitionend', () => {\n                console.log(\"touchedfloorDown\");\n                if (this.state.curPlatform) {\n                    console.log(\"did land1\")\n                    this.setState({playerJumping: false, playerFalling: false, playerLanded: true, playerIsLanding: false, speed: 1.5});\n                    if (this.state.curPlatform.getAttribute(\"id\") > 2 && !this.state.isScrolling) {\n                        console.log(curPlatform); \n                        this.startScrolling();\n                    }\n                }else {\n                    console.log(\"did land2\")\n                    this.setState({playerJumping: false, playerFalling: false, playerLanded: true, playerIsLanding: false, speed: 1.5});\n                    console.log(this.state.playerFalling);\n                }\n               \n            }, {once: true});\n            this.setState({playerIsLanding: true});\n        }\n    }\n\n    checkLanding = (platformEl) => {\n\n        const playerCurPos = this.getPlayerCurPos();\n        const platformPos = platformEl.getBoundingClientRect();\n        \n        // console.log((playerCurPos.y + playerCurPos.height) <= platformPos.y);\n        // console.log(playerCurPos.x > platformPos.left); \n        // console.log(playerCurPos.x < platformPos.right);\n        // console.log(playerCurPos.x + playerCurPos.width > platformPos.left );\n        // console.log(playerCurPos.x + playerCurPos.width < platformPos.right);\n        if ((playerCurPos.y + playerCurPos.height) <= platformPos.y) {//if the player is above the platform\n            //and the player is within the platform space\n            if ((\n                playerCurPos.x > platformPos.left &&     \n                playerCurPos.x < platformPos.right\n                ) || (\n                playerCurPos.x + playerCurPos.width > platformPos.left && \n                playerCurPos.x + playerCurPos.width < platformPos.right\n                )) {\n                // console.log(\"should land\");\n                const landPos = (platformPos.top - (playerCurPos.height));//set the landing at the platform taking + the player height//read body\n                \n                const distance = landPos - playerCurPos.y;\n                //NOTE this is where I am try the new fake physics experiment\n                if (distance < 100) {// if the distance between the player and where he is landing is small increase the veloctiy of landing\n                    // console.log(\"faster\" + distance);\n                    // this.setState({playerTargetY: landPos, speed: (distance < 30 ? 0.5 : 0.75 ), curPlatform: platformEl, playerFalling: true, playerJumping: false});\n                    // this.setState({playerTargetX: playerCurPos.x, playerTargetY: landPos, speed: ((distance/100)+0.1), playerFalling: true, playerJumping: false});\n                    this.setState({playerTargetX: playerCurPos.x, playerTargetY: landPos, curPlatform: platformEl, speed: (0.2), playerFalling: true, playerJumping: false});//FIXME bug where if player find landing while still moving it cause a frozen movement between turning velocity 0.2 here and back to 1.5 on lateral movement; maybe create a if(falling true && speed 0.2) dont do anything\n                    return platformEl\n                }//if not just land normally\n                this.setState({playerTargetY: landPos, curPlatform: platformEl, speed: 1.0, playerFalling: true, playerJumping: false})\n                return platformEl\n            }\n            return false //if the player is not landing on platform return false\n        }\n        return false //if the player is not landing on platform return false\n    }\n\n    checkAllPlatforms = () => {\n        let platform = null;\n        const platformEls = document.querySelectorAll('.platform');\n        let isLandingOnPlatform = false;\n        for (let i = 0; i < platformEls.length; i++) {//for all the platforms\n            platform = this.checkLanding(platformEls[i]);//if it finds a platform it returns the html element of the platform\n            if (platform) {//check if the player should land on them and if so make it the target\n                // console.log(\"chekc platforms\");\n                isLandingOnPlatform = true;\n                break\n            }\n        }\n        if (!isLandingOnPlatform) {//if it didnt found a platform set landing to ground\n            const playerCurPos = this.getPlayerCurPos();\n            const towerBottom = window.innerHeight - playerCurPos.height;\n            const distance = towerBottom - playerCurPos.y;\n            if (distance < 50) {// if the distance between the player and floor is small increase the veloctiy of landing\n                console.log(\"faster\" + distance);\n                // this.setState({playerTargetY: towerBottom, speed: ((distance/100)+0.1), playerFalling: true, playerJumping: false});\n                this.setState({playerTargetY: towerBottom, curPlatform: null, speed: (0.1), playerFalling: true, playerJumping: false});\n                // this.setState({playerTargetY: towerBottom, speed: (distance < 30 ? 0.5 : 0.75 ), curPlatform: null, playerFalling: true, playerJumping: false});\n                // console.log(this.state); \n                return false \n            } else {//if not just land normally\n                // console.log(\"slower\" + distance);\n                this.setState({playerTargetY: towerBottom, curPlatform: null, speed: 1.5, playerFalling: true, playerJumping: false});\n                return false\n            } \n        }\n        return platform\n\n    }\n\n    startScrolling = () => {\n        const scroll = document.querySelector(\".game\");\n        if(!this.state.isScrolling) { //if it is not already scrolling\n\n            const levelScrolling = setInterval(() => {\n                /* if(scroll.scrollTop === 0) { THIS IS FOR TESTING SCROLLING, FOR STOPPING WHEN REACHING THE END\n                    // console.log(\"test2\");\n                    clearInterval(this.state.scrollingFunc);\n                    this.setState({movementToggle: false});\n                    return\n                } */\n                scroll.scrollTop -=this.state.scrollingSpeed // scroll the game by the right amount\n                if (this.state.playerJumping) {//if the player is jumping up \n                    //dont do anything\n                } else if (this.state.playerFalling) {// if the player is falling\n                    const playerCurPos = this.getPlayerCurPos();\n                    const distance = (this.state.playerTargetY + this.state.scrollingAdjustment) - playerCurPos.y;//the new distance of the moving platform\n                    if (distance < 20) {//changed from 10 to 20; works better now\n                        // console.log(\"faster\" + distance);\n                        this.setState({playerTargetY: this.state.playerTargetY + this.state.scrollingAdjustment, speed: 0.1, playerTargetX: playerCurPos.x })//NOTE this might be the problem with bug number 6; which happens if i put this.land on holding the key for movement, it stop the player lateral movement and finding a landing; it is setting the targetx to the current position but is not setting back the target for movement after landing\n                        return;\n                    }\n                    this.setState({playerTargetY: this.state.playerTargetY + this.state.scrollingAdjustment})\n                } else {\n                    const playerCurPos = this.getPlayerCurPos();\n                    this.setState({playerTargetY: this.state.playerTargetY + this.state.scrollingAdjustment, speed: 0, playerTargetX: playerCurPos.x })\n                }\n                \n            }, 100);\n            this.setState({isScrolling: true, scrollingFunc: levelScrolling}); \n        }\n         \n        console.log(\"scrolling\");\n    }\n\n    /* GAME STATES METHODS */\n\n    gameOver = () => {\n        const playerEl = document.getElementById('player');\n        // playerEl.style.color=\"blue\";\n        clearInterval(this.state.scrollingFunc);\n        playerEl.style.display=\"none\";\n        console.log(\"gameOver\");\n        this.setState({gameStatus: false, points: (this.state.curPlatform ? (this.state.curPlatform.getAttribute(\"id\")*1000) : 0)})\n\n    }\n\n    resetGame = () => {\n        const playerEl = document.getElementById('player');\n        playerEl.style.display=\"block\";\n        const playerMeasurement = this.getPlayerCurPos();\n        // sets player initial position\n        const initPosX = window.innerWidth/2 - playerMeasurement.width/2; //at the middle of the x AXIS\n        console.log(playerMeasurement.height);\n        console.log(window.innerHeight - playerMeasurement.height);\n        const initPosY = window.innerHeight - playerMeasurement.height; //at the bottom of the screen// the subtration of 18 is to take in account the playr height\n        this.setState({\n            gameStatus: true,\n            playerTargetX: initPosX,\n            playerTargetY: initPosY,\n            \n            playerLanded: true,\n            playerJumping: false,\n            playerFalling: false,\n            playerIsLanding: false,\n\n            speed:0,\n            jumpGauge: 5,\n            gauge: null,\n\n            curPlatform: null,\n\n            isScrolling: false,\n            scrollingFunc: 0,\n            scrollingSpeed: 5,\n            scrollingAdjustment: 5,\n\n            points:0,\n        });\n\n        // const playerEl = document.getElementById('player');\n        // playerEl.style.display=\"block\";\n\n    }\n\n    /* PLAYER MOVEMENT CONTROLLER METHODS */\n\n    controllerJump = (isBeginningPress) => {\n        if (isBeginningPress) {\n            this.setState({gauge: setInterval(() => {// set the interval to increase the gauge every 250ms\n                if (this.state.jumpGauge < 10) {\n                    this.setState(prevState => {\n                        return {\n                            jumpGauge: prevState.jumpGauge + 1\n                        }\n                    })\n                }\n            }, 250)})\n        }else {\n            clearInterval(this.state.gauge);//stop the intervals and the gauge\n            this.jump(-840);//do the jump\n            this.setState({gauge: null, jumpGauge: 5})//set the gauge to initial value\n        }\n    }\n\n    controllerMovementRight = (isBeginningPress) => {\n        if (isBeginningPress) {\n            //get the right border of the playable area in screen location\n            const rightBorder = (window.innerWidth/2) + (320/2);// half of the screen plus halfof the playable area\n            const curPos = this.getPlayerCurPos();\n            // this is not working to well //couldnt figure out why; solution if they touch wall they die\n            if( curPos.x + curPos.width >= rightBorder){//if the player reachs the border \n                console.log(\"should stop; down rightwalldeath\");\n                this.gameOver();\n                this.stopMovement({x: rightBorder - curPos.width, y: this.state.playerTargetY}, 0);//stop them there and raise the flag on the rightborder\n            } else {\n                this.lateralMove(window.innerWidth);// start to move right\n                //FIXME bug number 6: where if player is holding the right or left key when landing on platform it doesnt check for landing and goes through it; adding this.land here might be the solution but it also lands player prematurely \n            }\n        }else {\n            const rightBorder = (window.innerWidth/2) + (320/2);\n            const curPos = this.getPlayerCurPos();\n            if( curPos.x + curPos.width >= rightBorder){\n                console.log(\"should stop; up rightwalldeath\");\n                this.gameOver();\n                this.stopMovement({x: rightBorder - curPos.width, y: this.state.playerTargetY}, 0);\n            } else {\n                this.stopMovement(this.getPlayerCurPos());\n            }\n            if(this.state.playerFalling === true ){\n                this.land(this.checkAllPlatforms());\n            }\n        }\n    }\n    \n    controllerMovementLeft = (isBeginningPress) => {\n        if (isBeginningPress) {\n            const leftBorder = (window.innerWidth/2) - (320/2);\n            // console.log(leftBorder);\n            const curPos = this.getPlayerCurPos();\n            if (curPos.x <= leftBorder) {\n                console.log(\"should stop; down leftwalldeath\");\n                this.gameOver();\n                // console.log(\"touch wall die\")// start some event here to say gameover\n                this.stopMovement({x: leftBorder, y: this.state.playerTargetY}, 0);//stop them there and raise the flag on the leftborder  \n            } else {  \n                if(this.state.playerFalling === true ){\n                    this.land(this.checkAllPlatforms());\n                }\n                this.lateralMove(0);// start to move left\n            }      \n        }else {\n            const leftBorder = (window.innerWidth/2) - (320/2);\n            const curPos = this.getPlayerCurPos();\n            if (curPos.x <= leftBorder) {\n                console.log(\"should stop; up lefttwalldeath\");\n                this.gameOver();\n                return this.stopMovement({x: leftBorder, y: this.state.playerTargetY}, 0);\n            }else {\n                this.stopMovement(this.getPlayerCurPos());\n            }\n            if(this.state.playerFalling === true ){\n                if(this.state.playerFalling === true ){\n                    this.land(this.checkAllPlatforms());\n                }\n                this.land(this.checkAllPlatforms());\n            }\n        }\n    }\n\n    /* EVENT LISTENERS */\n\n    handleMobileJump = () => {\n        document.querySelector(\".game\").addEventListener('touchstart', (e) =>{\n            if (this.state.gauge === null && e.target.nodeName !== \"I\") {//if gauge havent already started aka if the player isnt already holding the key down\n                this.controllerJump(true);\n            }\n        });\n \n        document.querySelector(\".game\").addEventListener('touchend', (e) =>{\n            console.log(e);\n            if (e.target.nodeName !== \"I\") {//if player is not pressing one of the icons\n                this.controllerJump(false);\n            }\n        });\n        \n        document.querySelector(\".game\").addEventListener('touchmove', (e) =>{// so that the page wont scroll while holding for jump \n            e.preventDefault();\n        });\n    }\n\n    handleKeyboardMovement = () => {\n        document.addEventListener('keydown', (e) => {\n            // console.log(e.code);\n            if(document.activeElement.nodeName !== \"INPUT\"){//if an input is not on focus\n                if(e.code === \"Space\") {\n                    e.preventDefault();//so that page doesnt scroll down\n                    if (this.state.gauge === null) {//if gauge havent already started aka if the player isnt already holding the key down\n                        this.controllerJump(true);\n                    }\n                } else if(e.code === \"ArrowRight\") {\n                    this.controllerMovementRight(true);\n                } else if(e.code === \"ArrowLeft\") {\n                    this.controllerMovementLeft(true);\n                }\n            }\n        });\n\n        document.addEventListener('keyup', (e) => {\n            // console.log(e.code);\n            if(document.activeElement.nodeName !== \"INPUT\"){//if an input is not on focus\n                if(e.code === \"Space\") {//when they let go of space \n                    this.controllerJump(false);\n                } else if(e.code === \"ArrowRight\") {\n                    this.controllerMovementRight(false);\n                } else if(e.code === \"ArrowLeft\") {\n                    this.controllerMovementLeft(false);\n                }\n            }\n        });\n\n        /* commented testing no longer necessary\n        // this is just for testing if press right click screen toggle going down\n        document.addEventListener('contextmenu', () => {\n            // console.log(\"desceu\");\n            const scroll = document.querySelector(\".game\");\n  \n            if(!this.state.movementToggle){ \n                // console.log(\"test1\");\n                const levelMovement = setInterval(() => {\n                    if(scroll.scrollTop === 0) {\n                        // console.log(\"test2\");\n                        clearInterval(this.state.movementFunc)\n                        this.setState({movementToggle: false});\n                        return\n                    }\n                    scroll.scrollTop -=0.1\n                    if (this.state.playerJumping) {\n                        \n                    } else if (this.state.playerFalling) {\n                        const playerCurPos = this.getPlayerCurPos();\n                        const distance = (this.state.playerTargetY + 1) - playerCurPos.y;\n                        if (distance < 10) {\n                            // console.log(\"faster\" + distance);\n                            this.setState({playerTargetY: this.state.playerTargetY + 1, speed: 0.2, playerTargetX: playerCurPos.x })\n                            return\n                        }\n                        this.setState({playerTargetY: this.state.playerTargetY + 1})\n                    } else {\n                        const playerCurPos = this.getPlayerCurPos();\n                        this.setState({playerTargetY: this.state.playerTargetY + 1, speed: 0, playerTargetX: playerCurPos.x })\n                    }\n                    \n                }, 200);\n                this.setState({movementToggle: true, movementFunc: levelMovement}); \n            } else {\n                // console.log(\"test2\");\n                clearInterval(this.state.movementFunc)\n                this.setState({movementToggle: false});\n            }\n                    \n          }); */\n\n    }\n\n    render(){\n        return(\n            <>\n            <GetGameState status={this.state.gameStatus} points={this.state.points}/>\n            <Player playerInfo={this.state}/>\n            <section className='game'>\n                <h1 className=\"inTitle\">Tepid Tower</h1>\n                <div className=\"hamburguer--menu\" ><i className=\"fa fa-bars\" ></i></div>\n                {/* <div className=\"hamburguer--menu\" onTouchStart={this.handleHamburguerMenu} ><i class=\"fa fa-bars\" ></i></div> */}\n                <DeathZone display={this.state.isScrolling}/>\n                <PlatformContainer status={this.state.gameStatus} curPlatform={(this.state.curPlatform ? this.state.curPlatform.getAttribute(\"id\") : 0)} reset={this.props.reset}/>\n            </section>\n            </> \n        )\n    }\n}\n\nexport default Game;","import React from 'react';\nimport './LeftSection.css'\n\n\nfunction LeftSection() {\n    return (\n\n        <section className=\"left--section\">\n            <h1 className=\"outTitle\">Tepid Tower</h1>\n        </section>   \n    )\n    \n}\n\nexport default LeftSection;","const URL =process.env.REACT_APP_API_URL\n\nclass AuthModel {\n    static register = data => {\n        return fetch(`${URL}/register`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }).then(response => response.json());\n      };\n\n    static login = data => {\n        return fetch(`${URL}/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n    static show = () => {\n        return fetch(`${URL}/profile`, {\n            method: \"GET\",\n            headers: {\n                // \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${localStorage.uid}`,\n            },\n            // body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n    static edit = data => {\n        return fetch(`${URL}/profile/edit`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${localStorage.uid}`,\n\n            },\n            body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n    static addScore = data => {\n        return fetch(`${URL}/profile/addscore`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${localStorage.uid}`,\n\n            },\n            body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n    static addFriend = data => {\n        return fetch(`${URL}/profile/addfriend`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${localStorage.uid}`,\n\n            },\n            body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n    static delete = data => {\n        return fetch(`${URL}/user/delete`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${localStorage.uid}`,\n\n            },\n            body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n}\n\nexport default AuthModel;","import React, { useEffect, useRef }  from 'react';\n\nimport {gameState} from \"../../recoil/atoms\"\nimport {useRecoilState} from \"recoil\";\nimport {resetState} from \"../../recoil/atoms\"\n\n\nfunction GetResetState(props) {\n\n    const [gameStatus,setGameStatus] = useRecoilState(gameState);\n    const [reset,setResetStatus] = useRecoilState(resetState);\n\n    const prevResetRef = useRef();\n    useEffect(() => {\n        prevResetRef.current = reset;\n    });\n    const prevReset = prevResetRef.current;\n\n\n    useEffect(function () {\n        // setPoints(props.reset);\n        console.log(reset);\n        setResetStatus(props.reset);\n        console.log(\"reseting game\", prevReset, props, reset);\n        \n    },[props]);\n\n    return null\n\n}\n\nexport default GetResetState;","import React from \"react\"\n\nimport \"./ControlsModal.css\"\n\nfunction ControlsModal(props) {\n\n    return (\n\n        <div className=\"controls--modal modal\">\n\n            {/* {(this.state.curUser ? <h2>{this.state.curUser.profile.highscore}</h2>: \"\" )} */}\n            <div>\n                <h2>CONTROLS</h2>\n                <div>\n                    <h3>USE THE ARROWS KEY TO MOVE</h3>\n\n                    <div>imageofarrowskeys</div>\n\n                </div>\n            </div>\n\n            <div>\n                <h3>USE SPACEBAR TO JUMP... THE LONGER YOU HOLD, THE HIGHER YOU WILL JUMP</h3>\n\n                <div>imageofspacebar</div>\n                \n            </div>\n\n        </div>\n    )\n    \n}\n\nexport default ControlsModal;","const URL =process.env.REACT_APP_API_URL\n\nclass LeaderboardModel {\n\n    static showGlobal = () => {\n        return fetch(`${URL}/leaderboard/global`, {\n            method: \"GET\",\n            // headers: {\n            //     // \"Content-Type\": \"application/json\",\n            //     authorization: `Bearer ${localStorage.uid}`,\n            // },\n            // body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n}//TODO create rejection handler for when fetch doesnt work\n\nexport default LeaderboardModel;","import React, {useState, useEffect} from \"react\"\n\nimport \"./LeaderboardModal.css\"\n\nimport LeaderboardModel from \"../../models/leaderboard\";\nimport { userState } from \"../../recoil/atoms\"\n\nfunction LeaderboardModal(props) {\n\n    const [users, setUsers] = useState([]);\n\n    function getUsers() {\n        LeaderboardModel.showGlobal().then(json => {\n            console.log(json.curProfiles)\n            const array = json.curProfiles;\n            // array.sort((b,a) => a.profile.highscore - b.profile.highscore)\n            setUsers(array);\n            console.log(users);\n        })\n    }\n\n    useEffect(function () {//TODO fix bug so that leadear board loads once the icon is clicked; as of now it only loads if the board is clicked\n        getUsers()\n        // console.log(\"load?\");\n    },[])//here only loads once at mount\n\n    function fetchBoard() {\n        getUsers();\n    }   \n\n    return (\n\n        <div onClick={() => fetchBoard()} className=\"leaderboard--modal modal\">\n                <h2>LEADERBOARDS</h2>\n                <div>\n                    <div>\n                        <table>\n                            <colgroup>\n                                <col style={{backgroundColor: \"blue\", width: 22 + \"px\"}}/>\n                                {/* <col style={{backgroundColor: \"blue\", width: 22 + \"px\"}}/>\n                                <col style={{backgroundColor: \"blue\", width: 22 + \"px\"}}/>\n                                <col style={{backgroundColor: \"blue\", width: 22 + \"px\"}}/> */}\n                                {/* <col span=\"2\" style={{width: 15 + \"px\"}}/> */}\n                            </colgroup>\n                            <thead>\n                                <tr>\n                                    {/* {users.length ? users[0].email : -1} */}\n                                    <th>#</th>\n                                    <th>Username</th>\n                                    <th>Score</th>\n                                    <th>Country</th>\n                                </tr>\n                            </thead>\n                        </table>\n                    </div>\n                    <div>\n                        <table>\n                            <colgroup>\n                                <col span=\"1\" style={{backgroundColor: \"blue\", width: 22 + \"px\"}}/>\n                                {/* <col span=\"2\" style={{backgroundColor: \"blue\", width: 22 + \"px\"}}/>\n                                <col span=\"3\" style={{backgroundColor: \"blue\", width: 22 + \"px\"}}/>\n                                <col span=\"4\" style={{backgroundColor: \"blue\", width: 22 + \"px\"}}/> */}\n\n                            </colgroup>\n                            <tbody>\n                            {users.map((item, index) => {\n                                    return <tr key={`L${index}`}>\n                                                <td>{index+1}</td>\n                                                <td>{item.username}</td>\n                                                <td>{item.highscore}</td>\n                                                <td>{item.country}</td>\n                                            </tr>\n                            })}\n                            </tbody> \n                        </table>\n                    </div>\n                </div>\n        </div>\n    )\n    \n}\n\nexport default LeaderboardModal;","import React, {useEffect, useRef} from 'react';\nimport { useRecoilCallback } from 'recoil';\n\nimport {useRecoilState} from 'recoil';\nimport {userState} from \"../atoms\"\n\n\nfunction GetUserState(props) {\n\n    const [user, setUser] = useRecoilState(userState);\n\n    // const prevUserRef = useRef();\n    // useEffect(() => {\n    //     prevUserRef.current = user;\n    // });\n    // const prevUser = prevResetRef.current;\n    \n    useEffect (function () {\n        console.log(user);\n        console.log(props.user);\n        if (user !== props.user) {\n            console.log(\"setttt\");\n            setUser(props.user); \n        }\n    },[props])\n\n    return null\n}\n\nexport default GetUserState;","import React from'react';\nimport './UserModal.css'\n\nimport AuthModel from \"../../models/auth\";\n\nimport GetUserState from \"../../recoil/components/GetUserState\"\n\nclass UserModal extends React.Component {\n\n    state = {\n\n        curUser: undefined,\n\n        friendEmail:\"\",\n\n        username: \"e\",\n        email: \"\",\n        country: \"\",\n        password: \"\"\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        console.log(this.props.user);\n        console.log(prevState);\n\n        if (this.state.curUser === undefined && this.props.user !== null) {\n            console.log(\"setttt\");\n            this.setState({\n                curUser: this.props.user, \n                country: this.props.user.profile.country,\n                username: this.props.user.profile.username,\n                password: \"\"\n            })   \n        }\n\n        if(this.state.curUser){\n            if(document.querySelector(\".user--modal--logged\").style.display === \"none\"){\n                if(this.state.curUser.profile.username !== this.state.username || this.state.curUser.profile.country !== this.state.country){\n                    this.setState({username: this.state.curUser.profile.username, country: this.state.curUser.profile.country})\n                }\n            }\n\n            if (this.props.user) {\n                \n                if (this.props.user.profile.highscore !== this.state.curUser.profile.highscore) {\n                    this.setState({curUser: this.props.user});\n                }\n            }\n        }\n    }\n\n    createResponseMessage = (json) => {\n        console.log(json);\n        let element = document.createElement(\"p\");\n        element.appendChild(document.createTextNode(json.message));\n        element.setAttribute(\"class\", `${json.type} message`);\n        return element;\n    }\n\n    clearInput = (className, inputName) => {//it finds the input elements in the html and sets their input value to empty, so that it will match with the state variables\n\n        // const inputEl = document.querySelector(`.${className} > * > input`);\n        const elInputList = document.querySelectorAll(`.${className} > * > input`);\n        console.log(elInputList);\n        for( let index = 0; index<elInputList.length; index++){\n            console.log(elInputList[index]);\n            if (inputName) {//for specific input\n                \n                if (elInputList[index].name === inputName) {\n                    elInputList[index].value = elInputList[index][`${elInputList[index].name}`] = \"\";\n                    // TODO add break here so it doesnt go unnecessarly thru the whole loop\n                }\n                continue;\n            }\n            elInputList[index].value = elInputList[index][`${elInputList[index].name}`] = \"\";\n            // instead of cleaning here another solution would be setting the state equal to whatever is in the input\n        }\n        \n        //inputEl.value = inputEl[`${inputEl.name}`] = \"\";\n\n    }\n\n    handleSubmit = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        console.log(event.target.getAttribute(\"class\"));\n        \n        if (event.target.getAttribute(\"class\")===\"signup\") {\n\n            const form =this.state;\n            delete form.friendEmail;\n            delete form.curUser;\n            AuthModel.register(form).then(json => {\n                console.log(json);\n                const responseMessage = document.querySelector(\".message\");\n                if(responseMessage) responseMessage.remove();\n                if (json.field) {\n                    const form = document.querySelector(\".signup\");\n                    return form.appendChild(this.createResponseMessage(json));\n                }\n            });\n            this.setState({password: \"\"});\n            this.clearInput(\"signup\", \"password\");\n        } else if(event.target.getAttribute(\"class\")===\"login\"){\n            AuthModel.login({email:this.state.email, password: this.state.password}).then(json => {\n                console.log(json);\n                const responseMessage = document.querySelector(\".message\");\n                if(responseMessage) responseMessage.remove();\n                if (json.field) {\n                    const form = document.querySelector(\".login\");\n                    return form.appendChild(this.createResponseMessage(json));\n                }\n\n                this.setState({\n                    curUser: json.foundUser, \n                    country: json.foundUser.profile.country,\n                    username: json.foundUser.profile.username,\n                    password: \"\"\n                })\n                this.clearInput(\"login\");\n                this.clearInput(\"signup\");\n                localStorage.setItem(\"uid\", json.signedJwt);\n                //DONE if is on gameOver add score and restart the game\n                if(!this.props.gameStatus && !this.props.isReseting) {\n                    console.log(this.props.points);\n                    AuthModel.addScore({score: this.props.points}).then(json => {\n                        console.log(json);\n                        // this.setState({curUser: json.updatedUser});\n                        return this.props.changeModal(\"user--modal--logged\");\n                        // return this.userModal(\"user--modal--logged\");\n                    });\n                    this.props.playAgainFunc(null);\n                    return\n                    // return this.userModal(\"\"); \n                }\n                return this.props.changeModal(\"user--modal--logged\");\n                // return this.userModal(\"user--modal--logged\");\n            })\n        } else if(event.target.getAttribute(\"class\")===\"edit--user\"){\n            const responseMessage = document.querySelector(\".message\");\n            if(responseMessage) responseMessage.remove();\n\n            if(this.state.curUser.profile.username === this.state.username && this.state.curUser.profile.country === this.state.country) {\n                const form = document.querySelector(\".edit--user\");\n                return form.appendChild(this.createResponseMessage({type:\"error\", message:\"Profile has no changes.\"}));\n            }\n            AuthModel.edit({username: this.state.username, country: this.state.country}).then(json => {\n                console.log(json);\n                if (json.field) {\n                    const form = document.querySelector(\".edit--user\");\n                    form.appendChild(this.createResponseMessage(json));\n                    if(json.status !== 200)return;\n                }\n                this.setState({\n                    curUser: json.updatedUser, \n                    country: json.updatedUser.profile.country,\n                    username: json.updatedUser.profile.username,\n                });\n                return\n            })\n\n        } else if(event.target.getAttribute(\"class\")===\"add--friend\"){\n\n            const responseMessage = document.querySelector(\".message\");\n            if(responseMessage) responseMessage.remove();\n\n            if (this.state.friendEmail === this.state.curUser.email) {\n                const form = document.querySelector(\".add--friend\");\n                return form.appendChild(this.createResponseMessage({type:\"error\", message:\"Please enter different email.\"}));\n            }\n            AuthModel.addFriend({friendEmail: this.state.friendEmail}).then(json => {\n                console.log(json);\n\n                if (json.field) {\n                    if (json.status===200) {\n                        console.log(\"hey\")\n                        // const test = document.querySelector(\".add--friend > * > input\");\n                        // test.setAttribute(\"value\", \"\");\n                        // test.value = test.friendEmail = \"\";\n                        this.clearInput(\"add--friend\");\n                        this.setState({friendEmail: \"\"})\n                    }\n                    const form = document.querySelector(\".add--friend\");\n                    return form.appendChild(this.createResponseMessage(json));\n                }\n                return\n            })\n\n        }else if(event.target.classList.contains(\"logout\")) {\n            this.props.changeModal(\"\");\n            // this.userModal();\n            // this.clearInput(\"login\");// just noticed i shouldnt clean when they go back but the moment they login\n            // this.clearInput(\"signup\");\n            // instead of cleaning here another solution would be setting the state variables equal to whatever is in the input\n            this.setState({\n                curUser: null, \n                country: \"\",\n                username: \"\",\n                email: \"\",\n                password: \"\"\n                })\n            localStorage.removeItem(\"uid\");\n\n        } else if(event.target.classList.contains(\"delete\")) {\n            AuthModel.delete().then(json => {\n                console.log(json);\n                if (json.field) {\n                    const form = document.querySelector(\".edit--user\");\n                    return form.appendChild(this.createResponseMessage(json));\n                }\n                this.props.changeModal(\"\");\n                // this.userModal();\n                this.setState({\n                    curUser: null, \n                    country: \"\",\n                    username: \"\",\n                    email: \"\",\n                    password: \"\"\n                    })\n                localStorage.removeItem(\"uid\");\n            })\n        }\n          \n    }\n\n    render () {\n        return (\n            <>\n            {this.state.curUser !== undefined ? <GetUserState user={this.state.curUser}/> : \"\"}\n            \n\n            <div className=\"user--modal modal\">\n                <form className=\"signup\" onSubmit={this.handleSubmit}>\n                    <div className=\"form--input\">\n                        <label>USERNAME</label>\n                        <input\n                        type=\"text\"\n                        name=\"username\"\n                        required\n                        onChange={e => this.setState({username: e.target.value})}\n                        value={this.username}\n                        />\n                    </div>\n\n                    <div className=\"form--input\">\n                        <label>EMAIL</label>\n                        <input\n                        type=\"email\"\n                        name=\"email\"\n                        required\n                        onChange={e => this.setState({email: e.target.value})}\n                        value={this.email}\n                        />\n                    </div>\n\n                    <div className=\"form--input\">\n                        <label>COUNTRY</label>\n                        <input\n                        type=\"text\"\n                        name=\"country\"\n                        required\n                        onChange={e => this.setState({country: e.target.value})}\n                        value={this.country}\n                        />\n                    </div>\n\n                    <div className=\"form--input\">\n                        <label>PASWORD</label>\n                        <input\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        onChange={e => this.setState({password: e.target.value})}\n                        value={this.password}\n                        />\n                    </div>\n\n                    <input type=\"submit\" value=\"Register\" />\n                </form>\n\n                <form className=\"login\" onSubmit={this.handleSubmit}>\n\n                    <div className=\"form--input\">\n                        <label>EMAIL</label>\n                        <input\n                        type=\"email\"\n                        name=\"email\"\n                        required\n                        onChange={e => this.setState({email: e.target.value})}\n                        value={this.email}\n                        />\n                    </div>\n\n                    <div className=\"form--input\">\n                        <label>PASWORD</label>\n                        <input\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        onChange={e => this.setState({password: e.target.value})}\n                        value={this.password}\n                        />\n                    </div>\n                    \n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n            </div>\n\n            <div className=\"user--modal--logged modal\">\n\n                    {(this.state.curUser ? <h2>HIGHSCORE: {this.state.curUser.profile.highscore}</h2>: \"\" )}\n                    <form className=\"edit--user\" onSubmit={this.handleSubmit}>\n\n                        <div className=\"form--input\">\n                            <label>USERNAME</label>\n                            <input\n                            type=\"text\"\n                            name=\"username\"\n                            required\n                            onChange={e => this.setState({username: e.target.value})}\n                            value={this.state.username}\n                            />\n                        </div>\n\n                        <div className=\"form--input\">\n                            <label>COUNTRY</label>\n                            <input\n                            type=\"text\"\n                            name=\"country\"\n                            required\n                            onChange={e => this.setState({country: e.target.value})}\n                            value={this.state.country}\n                            />\n                        </div>\n\n                        \n                        <input type=\"submit\" value=\"EDIT INFO\" />\n                    </form>\n\n                    <form className=\"add--friend\" onSubmit={this.handleSubmit}>\n\n                        <div className=\"form--input\">\n                            <h3>ADD A FRIEND TO YOUR FRIEND'S LEADERBOARD</h3>\n                            <input\n                            type=\"email\"\n                            name=\"friendEmail\"\n                            placeholder=\"friend@mail.com\"\n                            required\n                            onChange={e => this.setState({friendEmail: e.target.value})}\n                            value={this.friendEmail}\n                            />\n                        </div>\n                        \n                        <input type=\"submit\" value=\"ADD A FRIEND\" />\n                    </form>\n                    <div>\n                        <div className=\"delete icon\" onClick={this.handleSubmit}><i className=\"delete fa fa-trash\"></i></div>\n                        <div className=\"logout icon\" onClick={this.handleSubmit}><i className=\"logout  fa fa-sign-out\"></i></div>\n                    </div>\n                </div>\n                </>\n\n        )\n    }\n}\n\nexport default UserModal;","import React from 'react';\n\nimport './GameOverModal.css';\n\n\nclass GameOverModal extends React.Component {\n\n\n    render () {\n        return(\n            <div className={(this.props.highscore === true ? \"gameover--modal highscore modal\" : \"gameover--modal score modal\" )}>\n\n                {/* {(this.props.highscore === true ? \"gameover--highscore--modal modal\" : \"gameover--score--modal modal\" )} */}\n                <div>\n                    <h2 className={\"h2--title\"}>THE TOWER HAS YOU NOW!</h2>\n                    <div>\n                        {(this.props.highscore === true ? <h3>HIGHSCORE: {this.props.points}</h3>: <h3>SCORE: {this.props.points}</h3> )}\n                        <button className=\"playagain\" onClick={this.props.playAgainFunc}>PLAY AGAIN</button>\n                    </div>\n                </div>\n\n                {(this.props.user === null ? \n                <div>\n                    <h2>SIGN UP TO ADD YOU SCORE!</h2>\n                    <div>\n                        <button onClick={this.props.signUpFunc}>SIGNUP/LOGIN</button>\n                    </div>\n                </div> : \n                <div>\n                    <h2>You are logged in as {this.props.user.profile.username} !</h2>\n                </div> )}\n\n            </div>\n        )\n    }\n}\n\nexport default GameOverModal;","import React from 'react';\nimport './RightSection.css';\n\nimport AuthModel from \"../../models/auth\";\n\nimport GetResetState from \"../../recoil/components/GetResetState\";\nimport ControlsModal from \"../ControlsModal/ControlsModal\";\nimport LeaderboardModal from \"../LeaderboardModal/LeaderboardModal\";\nimport UserModal from \"../UserModal/UserModal\";\nimport GameOverModal from \"../GameOverModal/GameOverModal\";\n\n\nclass RightSection extends React.Component {\n\n    state = {\n        reset: false,\n\n        curUser:null,\n\n        friendEmail:\"\",\n\n        highscore:false,\n\n    }\n\n    componentDidMount() {\n        document.querySelector(\".hamburguer--menu\").addEventListener('touchstart', this.handleHamburguerMenu);\n    }\n\n    componentDidUpdate(prevProps) {\n        // console.log(\"humm\");\n        // console.log(this.props.user);\n        // console.log(prevProps.user);\n        if (this.props.user !== prevProps.user) {\n            console.log(\"humm\");\n            this.setState({curUser: this.props.user});   \n        }\n\n        console.log(this.props);\n        console.log(this.state);\n        if (!this.props.gameStatus && !this.state.reset) {\n            const loggingIn = document.querySelector(\".user--modal\");\n            const stillOver = document.querySelector(\".gameover--modal\");\n            if (loggingIn.style.display === \"flex\" || stillOver.style.display === \"flex\") {\n                return\n            }\n            console.log(\"gameover\");\n            console.log(this.props.points)\n            // if (this.state.curUser) {\n            if (this.props.user) {\n                AuthModel.addScore({score: this.props.points}).then(json => {\n                    console.log(json);\n\n                    if (json.message === \"score\") {\n                        \n                        this.setState({highscore: false});\n                        // this.userModal(\"gameover--modal\");\n                        // console.log(stillOver.style.display);\n\n                    } else if(json.message === \"highscore\") {\n\n                        this.setState({highscore: true, curUser: json.updatedUser});//i am only updating the user here because of the highscore display on the userModal\n                        // this.userModal(\"gameover--modal\");\n                    }\n                })\n            } else  {\n\n                this.setState({highscore: true});\n                // this.userModal(\"gameover--modal\");\n            \n            }\n            this.userModal(\"gameover--modal\");\n        } else if (this.props.gameStatus && this.state.reset){\n            // console.log(this.props)\n            // if(this.state.reset === true) {\n\n                this.setState({reset: false});\n            // }\n        }\n    }\n\n    userModal = (class_name) => {\n        let isModalOn = false;\n        const popUps = document.querySelectorAll(\".modal\");\n        // console.log(class_name);\n\n        if (class_name === \"user--modal--logged\") {\n            AuthModel.show().then(json => {\n                console.log(json);\n                // if (json.field) {\n                //     const form = document.querySelector(\".signup\");\n                //     return form.appendChild(this.createErrorMessage(json.message));\n                // }\n                this.setState({curUser: json.curUser });\n            });\n        }\n\n        for(let index = 0; index < popUps.length; index++){//NOTE if i make isModal part of the state and set it when a popup comes on I can remove this for loop\n            // console.log(popUps[index])\n            if (popUps[index].style.display === \"flex\") {\n                console.log(\"is on\");\n                isModalOn = true;\n                break;\n            }\n        }\n        console.log(class_name);\n        for (let i = 0; i < popUps.length; i++) {\n            if (popUps[i].classList.contains(class_name)) {\n                // console.log(\"true\");\n                // console.log(popUps[i])\n                // console.log(popUps[i].style.display)\n                if (popUps[i].style.display === \"flex\") {\n                    \n                    popUps[i].style.display = \"none\";\n                    console.log(\"off!\");\n                    document.querySelector(\".landing\").removeEventListener('click', this.handleMenuOff);\n                    const responseMessage = document.querySelector(\".message\");\n                    if(responseMessage) responseMessage.remove();\n                    // break\n                } else {\n                    // console.log(popUps[i])\n                    popUps[i].style.display = \"flex\";\n                    //bool that check if there is a modal already up \n                    if(!isModalOn && class_name !== \"gameover--modal\"){\n                        console.log(\"check\");\n                        document.querySelector(\".landing\").addEventListener('click', this.handleMenuOff);\n                    } else if (isModalOn && class_name === \"gameover--modal\") { //trying to fix bug on modal login after gameover\n                        document.querySelector(\".landing\").removeEventListener('click', this.handleMenuOff);\n                    }\n                }\n                // break\n            } else {\n                // console.log(popUps[i])\n                // console.log(popUps[i].style.display)\n                popUps[i].style.display = \"none\";\n                const responseMessage = document.querySelector(\".message\");\n                if(responseMessage) responseMessage.remove();\n            }\n           \n        }\n\n\n    }\n\n    handleUserOpt = (event) => {\n        // event.preventDefault();\n        //sends user info to be registered\n        event.stopPropagation();\n        if (!this.props.gameStatus) {\n            return//if on game over icon wont work\n        }\n        // if (this.state.curUser) {\n        if (this.props.user) {\n            \n            console.log(event.target);   \n            \n            this.userModal(\"user--modal--logged\");\n        } else {\n            console.log(event.target);   \n            \n            this.userModal(\"user--modal\");\n        }\n    }\n\n    handleLeaderboardOpt = (event) => {\n        // event.preventDefault();\n        //sends user info to be registered\n        event.stopPropagation();\n        if (!this.props.gameStatus) {\n            return//if on game over icon wont work\n        } \n        \n        this.userModal(\"leaderboard--modal\");\n    \n    }\n\n    handleControlsOpt = (event) => {\n        // event.preventDefault();\n        //sends user info to be registered\n        event.stopPropagation();\n        if (!this.props.gameStatus) {\n            return//if on game over icon wont work\n        }  \n            \n        this.userModal(\"controls--modal\");\n    \n    }\n\n    handleGameRestart = (event) => {\n        console.log(event);\n        if (event) {\n            event.stopPropagation();\n            // event.preventDefault(); //dont need this\n        }\n\n        // console.log(event.target);\n        // console.log(event.target.getAttribute(\"class\"));\n        \n        // if (event.target.getAttribute(\"class\")===\"playagain\") { also dont need this\n            this.setState({reset: true})\n            this.userModal(\"\");/* this is the reason why login after gameover doesnt create a bug where there wouldnt be a event listener to click away; it takes away all modals which makes the call for logged--modal set a event listener*/\n            console.log(this.state.reset)\n        // }   \n\n    }\n\n    handleHamburguerMenu = (event) =>{\n        event.preventDefault();\n        // event.stopImmediatePropagation();\n        // event.stopPropagation();\n        console.log(event.target);\n        // console.log(window.getComputedStyle(event.target).display); this is how you get css value that are not declared inline or with javascript\n        // console.log(window.getComputedStyle(event.target).getPropertyValue('font-size')); or like this\n        // console.log(window.getComputedStyle(event.target));\n        \n        const hamburguerMenu = event.target.parentElement;\n        const hamburguerMenuCSS = window.getComputedStyle(hamburguerMenu);\n\n        console.log(hamburguerMenuCSS.display);\n\n        if(hamburguerMenuCSS.display === \"block\"){//FIXME check if gamover modal is on display to disable the menu\n\n            hamburguerMenu.style.display = \"none\";\n\n            const elIconList = document.querySelectorAll(\".icon\");\n            console.log(elIconList);\n    \n            for (let index = 0; index < elIconList.length; index++) {\n                elIconList[index].style.display = \"inline\";\n            \n            }\n            document.querySelector(\".landing\").addEventListener('click', this.handleMenuOff);\n            // document.body.addEventListener('touchstart', this.handleMenuOff);\n        } \n\n    }\n\n    handleMenuOff = (event) =>{\n        console.log(event.target.nodeName);\n        console.log(event.target.closest(\".modal\")); //looks upper to find matching element; so if it is inside a modal\n        if(event.target.nodeName !== \"I\" && event.target.closest(\".modal\") === null){ // if it is not an icon and it is not inside a modal\n            const hamburguerMenu = document.querySelector(\".hamburguer--menu\");\n            \n            this.userModal(\"\");\n            console.log(event.target);\n            const elIconList = document.querySelectorAll(\".icon--menu\");\n            console.log(elIconList);\n            \n            for (let index = 0; index < elIconList.length; index++) {\n                elIconList[index].style.display = null;\n                \n            }\n            \n            hamburguerMenu.style.display = null;\n            // document.body.removeEventListener('touchstart', this.handleMenuOff);\n            document.querySelector(\".landing\").removeEventListener('click', this.handleMenuOff);\n            console.log(\"off?\");\n        }\n    }\n\n    render () {\n        return (\n\n            <section className=\"section--right\">\n                <aside className=\"aside--top\">\n                    <div className=\"icon icon--menu\"><i className=\"fa fa-cog\"></i></div>\n                    <div className=\"icon icon--menu\" onClick={this.handleLeaderboardOpt} ><i className=\"fa fa-trophy\"></i></div>\n                    <div className=\"icon icon--menu\" onClick={this.handleControlsOpt} ><i className=\"fa fa-gamepad fa-lg\"></i></div>\n                </aside>\n                <aside className=\"aside--bottom\">\n                    <div className=\"icon icon--menu\" onClick={this.handleUserOpt}>\n                    <i className=\"fa fa-user\"></i>\n                    </div>\n                </aside>\n                \n                <GetResetState reset={this.state.reset} />\n\n                <LeaderboardModal />\n                <ControlsModal />\n\n                <UserModal user={this.state.curUser} points={this.props.points} gameStatus={this.props.gameStatus} isReseting={this.state.reset} submitHandler={this.handleSubmit} changeModal={(className) => this.userModal(className)} playAgainFunc={this.handleGameRestart}/>\n\n                <GameOverModal points={this.props.points} highscore={this.state.highscore} user={this.props.user} playAgainFunc={this.handleGameRestart} signUpFunc={() => this.userModal(\"user--modal\")} />\n\n\n            </section>\n                \n        )\n    }\n    \n}\n\nexport default RightSection;","import React, { useEffect, useRef, useState } from 'react';\nimport './Landing.css'\n\nimport Game from '../components/Game/Game'\nimport LeftSection from '../components/LeftSection/LeftSection'\nimport RightSection from '../components/RightSection/RightSection'\n\nimport {useRecoilState} from \"recoil\";\nimport {resetState, userState} from \"../recoil/atoms\"\nimport {gameState} from \"../recoil/atoms\"\n// import {resetState} from \"../recoil/atoms\"\nimport {userPoints} from \"../recoil/atoms\"\n\nimport AuthModel from \"../models/auth\";\n\n\nfunction Landing() {\n\n    const [user,setUser] = useRecoilState(userState);\n    const [gameStatus,setGameStatus] = useRecoilState(gameState);\n    const [resetStatus,setResetStatus] = useRecoilState(resetState);\n    const [points,setPoints] = useRecoilState(userPoints);\n\n    console.log(resetStatus);\n\n    // const prevStatusRef = useRef();\n    // useEffect(() => {\n    //     prevStatusRef.current = gameStatus;\n    // });\n    // const prevStatus = prevStatusRef.current;\n\n      useEffect(function () {  \n        console.log(gameStatus);\n        if (localStorage.uid) {//if local storage already has a token\n            AuthModel.show().then(json => {//verify\n                setUser(json.curUser);//and set the global user state\n            });\n        }\n\n      }, []);\n\n\n\n    return (\n        <div className=\"landing\">\n            <LeftSection />\n            <Game reset={resetStatus}/>\n            <RightSection user={user} gameStatus={gameStatus} points={points} />\n        </div>\n    )\n    \n}\n\nexport default Landing;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {RecoilRoot} from \"recoil\"\n\nimport './index.css';\n// import App from './App';\nimport Landing from './pages/Landing'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <Landing />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}