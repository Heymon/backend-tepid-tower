{"version":3,"sources":["assets/16bitcharacter.jpg","components/Player/Player.js","components/Platform/Platform.js","components/Platform/PlatformContainer.js","assets/Fogo-Animado-png.gif","components/DeathZone/DeathZone.js","recoil/atoms.js","recoil/components/GetGameState.js","components/Game/Game.js","components/LeftSection/LeftSection.js","models/auth.js","recoil/components/GetResetState.js","components/ControlsModal/ControlsModal.js","models/leaderboard.js","components/LeaderboardModal/LeaderboardModal.js","components/RightSection/RightSection.js","pages/Landing.js","reportWebVitals.js","index.js"],"names":["Player","id","style","transform","this","props","playerInfo","playerTargetY","playerTargetX","transition","speed","src","character","React","Component","Platform","state","platformId","setState","idKey","className","margin","xAxis","width","height","backgroundColor","color","PlatformContainer","currentPlatformId","platforms","numOfPlatforms","generatePlatforms","prePlatforms","idGenerator","console","log","index","unshift","getRandomPos","max","Math","floor","random","addPlatform","gameWindow","newPlatform","pop","scrollTop","setGameAtBegining","levelWindow","document","querySelector","scrollTo","scrollHeight","setEvents","addEventListener","resetPlatforms","setTimeout","prevProps","curPlatform","reset","DeathZone","display","marginTop","window","innerHeight","fogo","userState","atom","key","default","gameState","resetState","userPoints","GetGameState","useRecoilState","gameStatus","setGameStatus","points","setPoints","prevStatusRef","useRef","useEffect","current","status","Game","playerLanded","playerJumping","playerFalling","jumpGauge","gauge","isScrolling","scrollingFunc","scrollingSpeed","scrollingAdjustment","movementToggle","movementFunc","getPlayerCurPos","playerEl","getElementById","x","y","getBoundingClientRect","lateralMove","movementTarget","stopMovement","pos","jump","amount","playerTarget","land","checkAllPlatforms","getAttribute","startScrolling","once","checkLanding","platformEl","playerCurPos","platformPos","left","right","landPos","top","platform","platformEls","querySelectorAll","isLandingOnPlatform","i","length","towerBottom","distance","scroll","levelScrolling","setInterval","clearInterval","gameOver","resetGame","playerMeasurement","initPosX","innerWidth","initPosY","handleKeyboardMovement","e","code","preventDefault","prevState","rightBorder","curPos","leftBorder","levelMovement","LeftSection","URL","process","AuthModel","register","data","fetch","method","headers","body","JSON","stringify","then","response","json","login","show","authorization","localStorage","uid","edit","addScore","delete","GetResetState","setResetStatus","prevResetRef","prevReset","ControlsModal","LeaderboardModel","showGlobal","LeaderboardModal","useState","users","setUsers","getUsers","curProfiles","array","onClick","map","item","username","highscore","country","RightSection","curUser","email","password","userModal","class_name","popUps","field","appendChild","createErrorMessage","message","classList","contains","error","remove","handleUserOpt","event","stopPropagation","target","handleLeaderboardOpt","handleControlsOpt","element","createElement","createTextNode","setAttribute","handleSubmit","form","foundUser","profile","setItem","signedJwt","updatedUser","removeItem","handleGameOverModal","user","score","class","onSubmit","type","name","required","onChange","value","Landing","setUser","resetStatus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2ea26dc6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/16bitcharacter.156d5fea.jpg\";","import React from \"react\";\nimport character from\"../../assets/16bitcharacter.jpg\"\n\nimport './Player.css';\n\nclass Player extends React.Component{\n    render() {\n        return(\n            <div id=\"player\" style={{\n                // transform: `translateX(550px) translateY(840px)`,\n                transform: `translateY(${this.props.playerInfo.playerTargetY}px) translateX(${this.props.playerInfo.playerTargetX}px)` ,\n                transition: `${this.props.playerInfo.speed}s linear`\n                }}>\n                    <img src={character} />\n                </div>\n        )\n    }\n}\n\nexport default Player;","import React from 'react';\n\nclass Platform extends React.Component {\n\n    state = {\n        platformId: 0,\n\n    }\n\n    componentDidMount() {\n        this.setState({platformId: this.props.idKey})\n    }\n    render() {\n\n        return(\n            <div className=\"platform\" id={this.state.platformId} style={{margin: `96px 0 56px ${this.props.xAxis}%`, width: \"60px\", height: \"10px\", backgroundColor: `${this.props.color}`}}>\n                {/* {`p${this.state.platformId}`} */}\n            </div>\n        )\n    }\n    \n}\n\nexport default Platform;","import React from 'react';\n\nimport Platform from './Platform';\n\nclass PlatformContainer extends React.Component {\n\n    state = {\n        currentPlatformId: 0,\n        platforms: [],\n        numOfPlatforms: 10\n    }\n\n    componentDidMount(props) {\n        this.setEvents();\n        this.generatePlatforms();\n    }\n\n    componentDidUpdate(prevProps) {\n        // console.log(\"when\");\n        const gameWindow = document.querySelector(\".game\")\n        // console.log(gameWindow.scrollTop && props.curPlatform > 2);\n        if (gameWindow.scrollTop <= 100 && this.props.curPlatform > 2) {\n            console.log(this.props);\n            this.addPlatform(gameWindow);\n        } \n        if(prevProps.reset === false && this.props.reset) {\n            console.log(\"false\")\n            this.resetPlatforms();\n            // this.generatePlatforms();\n            // if (this.props.reset !== prevProps.reset) {\n            //     console.log(\"reset\")\n            //     // this.resetPlatforms();\n            //     // this.generatePlatforms();\n                \n            // }\n        }\n    }\n\n    generatePlatforms = () => {\n\n        const prePlatforms = [];\n        let idGenerator = this.state.currentPlatformId;\n        console.log(idGenerator);\n        for (let index = 0; index < this.state.numOfPlatforms; index++) {\n            idGenerator++;\n            prePlatforms.unshift(<Platform xAxis={this.getRandomPos(81)} color={\"red\"} key={idGenerator} idKey={idGenerator}/>);\n            \n        }\n        console.log(prePlatforms);\n        this.setState({platforms: prePlatforms, currentPlatformId: idGenerator});\n        return this.state.platforms\n\n    }\n\n    getRandomPos = (max) => {\n        // const randomNum = Math.floor(Math.random() * (max+1));\n        return Math.floor(Math.random() * (max+1))\n    }\n\n    addPlatform = (gameWindow) => {\n        const prePlatforms = this.state.platforms;\n        let idGenerator = this.state.currentPlatformId;\n        idGenerator++;\n        const newPlatform = <Platform xAxis={this.getRandomPos(81)} color={(idGenerator < 20 ? \"blue\" : \"green\")} key={idGenerator} idKey={idGenerator}/>\n        console.log(\"added platform\");\n        \n        prePlatforms.pop();\n        prePlatforms.unshift(newPlatform);\n\n        // const previousScrollTop = gameWindow.scrollTop;\n        this.setState({platforms: prePlatforms, currentPlatformId: idGenerator});\n        console.log(gameWindow.scrollTop);\n        // console.log(gameWindow.scrollTop = previousScrollTop + 106);\n        // console.log(\"does it reach here\")\n    }\n\n    setGameAtBegining = () =>{\n        console.log(\"set twice?\")\n        const levelWindow = document.querySelector(\".game\")\n        levelWindow.scrollTo(0, levelWindow.scrollHeight);\n         \n    }\n\n    setEvents = () =>{\n        document.addEventListener('DOMContentLoaded', this.setGameAtBegining);\n\n        // document.addEventListener('click', () => {\n        //     console.log(\"deu\")  \n        //     const levelWindow = document.querySelector(\".game\")\n        //     this.addPlatform(levelWindow);\n\n                    \n        //   });\n  \n    }\n\n    resetPlatforms = () => {\n\n        \n        this.setState({\n            currentPlatformId: 0,\n            platforms: [],\n            numOfPlatforms: 10\n        });\n        \n        setTimeout(() => {\n            this.generatePlatforms();\n            this.setGameAtBegining();\n        }, 100); \n    }\n\n\n    render() {\n        return (\n            <>\n            {this.state.platforms}\n            </>\n        )\n    }\n}\n\nexport default PlatformContainer;","export default __webpack_public_path__ + \"static/media/Fogo-Animado-png.42248e57.gif\";","import React from \"react\"\nimport fogo from '../../assets/Fogo-Animado-png.gif';\nimport \"./DeathZone.css\"\n\nfunction DeathZone(props) {\n\n    return (\n        <div className=\"deathzone\" style ={(props.display ? {display: \"flex\", marginTop: `${window.innerHeight -50}px`}: {display: \"none\", marginTop: `${window.innerHeight - 50}px`})}>\n            <div><img src={fogo}/></div>\n            <div><img src={fogo}/></div>\n            <div><img src={fogo}/></div>\n            <div><img src={fogo}/></div>\n            <div><img src={fogo}/></div>\n            <div><img src={fogo}/></div>\n        </div>\n    )\n    \n}\n\nexport default DeathZone;","import {atom} from \"recoil\";\n\nexport const userState = atom({\n    key: \"userState\",\n    default: null,\n});\n\nexport const gameState = atom({\n    key: \"gameState\",\n    default: true,\n});\n\nexport const resetState = atom({\n    key: \"resetState\",\n    default: false,\n});\n\nexport const userPoints = atom({\n    key: \"userPoints\",\n    default: 0,\n});","import React, { useEffect, useRef }  from 'react';\n\nimport {gameState} from \"../../recoil/atoms\"\nimport {useRecoilState} from \"recoil\";\nimport {userPoints} from \"../../recoil/atoms\"\nimport {resetState} from \"../../recoil/atoms\"\n\n\nfunction GetGameState(props) {\n\n    const [gameStatus,setGameStatus] = useRecoilState(gameState);\n    const [reset,setResetStatus] = useRecoilState(resetState);\n    const [points,setPoints] = useRecoilState(userPoints);\n    \n    const prevStatusRef = useRef();\n    useEffect(() => {\n        prevStatusRef.current = gameStatus;\n    });\n    const prevStatus = prevStatusRef.current;\n\n    useEffect(function () {\n        setPoints(props.points);\n        console.log(points);\n        setGameStatus(props.status);\n        \n        // console.log(\"checking user\", prevStatus, props, gameStatus);\n        \n      },[props]);\n\n    // console.log(user);\n\n\n    console.log(\"this.works\");\n    \n\n\n\n    return null\n}\n\nexport default GetGameState;","import React from \"react\";\n\nimport './Game.css'\n\nimport Player from \"../Player/Player\";\nimport PlatformContainer from \"../Platform/PlatformContainer\";\nimport DeathZone from \"../DeathZone/DeathZone\";\n\nimport GetGameState from \"../../recoil/components/GetGameState\";\n\nclass Game extends React.Component {\n\n    state = {\n        gameStatus:true,\n\n        playerTargetY: 0,\n        playerTargetX: 0,\n        // playerRotation: 0,\n\n        playerLanded: true,\n        playerJumping: false,\n        playerFalling: false,\n\n        speed:0,\n        jumpGauge: 5,\n        gauge: null,\n\n        curPlatform: null,\n\n        isScrolling: false,\n        scrollingFunc: 0,\n        scrollingSpeed: 5,\n        scrollingAdjustment: 5,\n\n        points:0,\n\n        // testing\n        movementToggle: false,\n        movementFunc: 0\n\n    }\n\n    /* LIFECYCLE COMPONENT METHODS */\n\n    componentDidMount () {\n        const playerMeasurement = this.getPlayerCurPos();\n        // sets player initial position\n        const initPosX = window.innerWidth/2 - playerMeasurement.width/2; //at the middle of the x AXIS\n        const initPosY = window.innerHeight - playerMeasurement.height; //at the bottom of the screen// the subtration of 18 is to take in account the playr height\n        this.setState({playerTargetX: initPosX, playerTargetY: initPosY});\n        this.handleKeyboardMovement();\n\n    }\n\n    componentDidUpdate (prevState, prevProps) {\n        console.log(\"testingsorry\");\n        console.log(this.props.reset);\n        if(this.props.reset) {\n            console.log(\"reset\");\n            if(!this.state.gameStatus)this.resetGame()\n        }\n        \n        \n        if (this.state.isScrolling) {\n            const playerCurPos = this.getPlayerCurPos();\n            if (playerCurPos.y + playerCurPos.height >= window.innerHeight - 25) {\n                console.log(\"should stop; didupdate bottomdeath\");\n                return this.gameOver()\n            }\n\n        }\n\n        // console.log(\"update\");\n\n        if(this.state.speed <= 0.2) {//if the speed was increase for fixing position\n            \n            if(prevState.playerTargetX === window.innerWidth || prevState.playerTargetX === 0){// and the player was moving \n                this.setState({speed: 1.5, playerTargetX: prevState.playerTargetX})//set the movement back to normal\n            }\n        }\n\n        if (this.state.curPlatform !== null) {//if the player is on top of a platform\n            const playerCurPos = this.getPlayerCurPos();\n            const platformPos = this.state.curPlatform.getBoundingClientRect()\n            // after a movement check to see if he is still on top  of said platform\n            if ((\n                playerCurPos.x > platformPos.left &&     \n                playerCurPos.x < platformPos.right\n                ) || (\n                playerCurPos.x + playerCurPos.width > platformPos.left && \n                playerCurPos.x + playerCurPos.width < platformPos.right\n                )) {\n                // console.log(\"should not fall\");\n            } else {//if they are not on top make them fall and check possible landings \n                if(!this.state.playerFalling && !this.state.playerJumping && this.state.playerLanded) {\n                    // console.log(\"should fall\")\n                    this.setState({playerFalling: true, playerLanded: false})\n                    // this.checkAllPlatforms();\n                    this.land(this.checkAllPlatforms());\n                }\n            }\n        }\n    }\n\n    /* PLAYER MOVEMENT FUCNTIONS */\n\n    // gets the player position current position on screen\n    getPlayerCurPos = () => {\n        const playerEl = document.getElementById('player');\n        if(playerEl === null) return {x:0,y:0,height:0,width:0};\n        const playerCurPos = playerEl.getBoundingClientRect();\n        // console.log(playerCurPos);\n        return playerCurPos;\n    }\n\n    // they way movement works is by setting the target at either far right or far left on key down\n    //then on key up set the target to the players current position making them stop\n    lateralMove = (movementTarget) => {\n        this.setState({playerTargetX: movementTarget, speed: 1.5})\n    }\n\n    stopMovement = (pos, speed=1.5) => {\n        this.setState({playerTargetX: pos.x, speed});\n    }\n\n    // on key down the jump gauge starts at 5 and goes up to 10 depending when release//key up\n    // then similar to lateral movement the jump sets the target to a distance equivalent to the top of the screen\n    //(in this case 840px so if the player is at a platform the jump will be set at -840 from that position) and\n    // starts a timeout with the duration being multiplied by the gauge set on keydown so\n    // that instead of reaching the top of the screen when the timeout runs the procese of falling starts\n    jump = (amount) => {\n        // if not jumping or in the ground\n        if (this.state.playerJumping === false && this.state.playerLanded === true) {\n            \n            // then similar to lateral movement the jump sets the target to a distance equivalent to the top of the screen\n            const playerTarget = this.state.playerTargetY + amount;\n            this.setState({playerTargetY: playerTarget, speed: 1.5, playerJumping: true, playerLanded: false});\n\n            // starts a timeout with the duration being multiplied by the gauge set on keydown\n            setTimeout(() => {\n                // this.checkAllPlatforms()//check all platform to define where player should land including the bottom\n                \n                this.land(this.checkAllPlatforms());//sets event Listener to confirm the landing\n            }, 48 * this.state.jumpGauge)\n\n        }\n    }\n\n    //sets event Listener to confirm the landing\n    land = (curPlatform) => {\n        const playerEl = document.getElementById('player');\n                playerEl.addEventListener('transitionend', () => {\n                    console.log(\"touchedfloorDown\");\n                    if (curPlatform) {\n                        console.log(\"did land1\")\n                        this.setState({playerJumping: false, playerFalling: false, playerLanded: true, curPlatform, speed: 1.5});\n                        if (curPlatform.getAttribute(\"id\") > 2 && !this.state.isScrolling) {\n                            this.startScrolling();\n                        }\n                    }else {\n                        console.log(\"did land2\")\n                        if (this.state.curPlatform) {\n                            \n                            // if (this.state.curPlatform.getAttribute(\"id\") > 2 && this.state.isScrolling) {\n                            //     console.log(\"should stop; landfunc bottomdeath\");\n                            //     this.gameOver();\n                            // }\n                            this.setState({playerJumping: false, playerFalling: false, playerLanded: true, speed: 1.5});\n                        }\n                        this.setState({playerJumping: false, playerFalling: false, playerLanded: true, curPlatform: null, speed: 1.5});\n                        console.log(this.state.playerFalling);\n                    }\n                   \n                }, {once: true});\n    }\n\n    checkLanding = (platformEl) => {\n\n        const playerCurPos = this.getPlayerCurPos();\n        const platformPos = platformEl.getBoundingClientRect();\n        \n        // console.log((playerCurPos.y + playerCurPos.height) <= platformPos.y);\n        // console.log(playerCurPos.x > platformPos.left); \n        // console.log(playerCurPos.x < platformPos.right);\n        // console.log(playerCurPos.x + playerCurPos.width > platformPos.left );\n        // console.log(playerCurPos.x + playerCurPos.width < platformPos.right);\n        if ((playerCurPos.y + playerCurPos.height) <= platformPos.y) {//if the player is above the platform\n            //and the player is within the platform space\n            if ((\n                playerCurPos.x > platformPos.left &&     \n                playerCurPos.x < platformPos.right\n                ) || (\n                playerCurPos.x + playerCurPos.width > platformPos.left && \n                playerCurPos.x + playerCurPos.width < platformPos.right\n                )) {\n                // console.log(\"should land\");\n                const landPos = (platformPos.top - (playerCurPos.height));//set the landing at the platform taking + the player height//read body\n                \n                const distance = landPos - playerCurPos.y;\n                if (distance < 100) {// if the distance between the player and where he is landing is small increase the veloctiy of landing\n                    // console.log(\"faster\" + distance);\n                    // this.setState({playerTargetY: landPos, speed: (distance < 30 ? 0.5 : 0.75 ), curPlatform: platformEl, playerFalling: true, playerJumping: false});\n                    // this.setState({playerTargetX: playerCurPos.x, playerTargetY: landPos, speed: ((distance/100)+0.1), playerFalling: true, playerJumping: false});\n                    this.setState({playerTargetX: playerCurPos.x, playerTargetY: landPos, speed: (0.2), playerFalling: true, playerJumping: false});\n                    return platformEl\n                }//if not just land normally\n                this.setState({playerTargetY: landPos, curPlatform: platformEl, speed: 1.0, playerFalling: true, playerJumping: false})\n                return platformEl\n            }\n            return false //if the player is not landing on platform return false\n        }\n        return false //if the player is not landing on platform return false\n    }\n\n    checkAllPlatforms = () => {\n        let platform = null;\n        const platformEls = document.querySelectorAll('.platform');\n        let isLandingOnPlatform = false;\n        for (let i = 0; i < platformEls.length; i++) {//for all the platforms\n            platform = this.checkLanding(platformEls[i]);//if it finds a platform it returns the html element of the platform\n            if (platform) {//check if the player should land on them and if so make it the target\n                // console.log(\"chekc platforms\");\n                isLandingOnPlatform = true;\n                break\n            }\n        }\n        if (!isLandingOnPlatform) {//if it didnt found a platform set landing to ground\n            const playerCurPos = this.getPlayerCurPos();\n            const towerBottom = window.innerHeight - playerCurPos.width;\n            const distance = towerBottom - playerCurPos.y;\n            if (distance < 100) {// if the distance between the player and where he is landing is small increase the veloctiy of landing\n                console.log(\"faster\" + distance);\n                // this.setState({playerTargetY: towerBottom, speed: ((distance/100)+0.1), playerFalling: true, playerJumping: false});\n                this.setState({playerTargetY: towerBottom, speed: (0.1), playerFalling: true, playerJumping: false});\n                // this.setState({playerTargetY: towerBottom, speed: (distance < 30 ? 0.5 : 0.75 ), curPlatform: null, playerFalling: true, playerJumping: false});\n                // console.log(this.state); \n                return false \n            } else {//if not just land normally\n                // console.log(\"slower\" + distance);\n                this.setState({playerTargetY: towerBottom, speed: 1.5, playerFalling: true, playerJumping: false});\n                return false\n            } \n        }\n        return platform\n\n    }\n\n    startScrolling = () => {\n        // this.setState({isScrolling: true})\n        const scroll = document.querySelector(\".game\");\n  \n        // console.log(\"test1\");\n        if(!this.state.isScrolling) {\n\n            const levelScrolling = setInterval(() => {\n                if(scroll.scrollTop === 0) {\n                    // console.log(\"test2\");\n                    clearInterval(this.state.scrollingFunc);\n                    this.setState({movementToggle: false});\n                    return\n                }\n                scroll.scrollTop -=this.state.scrollingSpeed\n                if (this.state.playerJumping) {\n                    \n                } else if (this.state.playerFalling) {\n                    const playerCurPos = this.getPlayerCurPos();\n                    const distance = (this.state.playerTargetY + this.state.scrollingAdjustment) - playerCurPos.y;\n                    if (distance < 20) {//changed from 10 to 20; works better now\n                        // console.log(\"faster\" + distance);\n                        this.setState({playerTargetY: this.state.playerTargetY + this.state.scrollingAdjustment, speed: 0.1, playerTargetX: playerCurPos.x })\n                        return\n                    }\n                    this.setState({playerTargetY: this.state.playerTargetY + this.state.scrollingAdjustment})\n                } else {\n                    const playerCurPos = this.getPlayerCurPos();\n                    this.setState({playerTargetY: this.state.playerTargetY + this.state.scrollingAdjustment, speed: 0, playerTargetX: playerCurPos.x })\n                }\n                \n            }, 100);\n            this.setState({isScrolling: true, scrollingFunc: levelScrolling}); \n        }\n         \n        console.log(\"scrolling\");\n    }\n\n    gameOver = () => {\n        const playerEl = document.getElementById('player');\n        // playerEl.style.color=\"blue\";\n        clearInterval(this.state.scrollingFunc);\n        playerEl.style.display=\"none\";\n        console.log(\"gameOver\");\n        this.setState({gameStatus: false, points: (this.state.curPlatform ? (this.state.curPlatform.getAttribute(\"id\")*1000) : 0)})\n\n    }\n\n    resetGame = () => {\n        const playerEl = document.getElementById('player');\n        playerEl.style.display=\"block\";\n        const playerMeasurement = this.getPlayerCurPos();\n        // sets player initial position\n        const initPosX = window.innerWidth/2 - playerMeasurement.width/2; //at the middle of the x AXIS\n        console.log(playerMeasurement.height);\n        console.log(window.innerHeight - playerMeasurement.height);\n        const initPosY = window.innerHeight - playerMeasurement.height; //at the bottom of the screen// the subtration of 18 is to take in account the playr height\n        this.setState({\n            gameStatus: true,\n            playerTargetX: initPosX,\n            playerTargetY: initPosY,\n            \n            playerLanded: true,\n            playerJumping: false,\n            playerFalling: false,\n\n            speed:0,\n            jumpGauge: 5,\n            gauge: null,\n\n            curPlatform: null,\n\n            isScrolling: false,\n            scrollingFunc: 0,\n            scrollingSpeed: 5,\n            scrollingAdjustment: 5,\n\n            points:0,\n        });\n\n        // const playerEl = document.getElementById('player');\n        // playerEl.style.display=\"block\";\n\n    }\n\n    /* EVENT LISTENERS */\n\n    handleKeyboardMovement = () => {\n\n        document.addEventListener('keydown', (e) => {\n            // console.log(e.code);\n            if(e.code === \"Space\") {\n                e.preventDefault();//so that page doesnt scroll down\n                if (this.state.gauge === null) {//if gauge havent already started aka if the player isnt already holding the key down\n                    this.setState({gauge: setInterval(() => {// set the interval to increase the gauge every 250ms\n                        if (this.state.jumpGauge < 10) {\n                            this.setState(prevState => {\n                                return {\n                                    jumpGauge: prevState.jumpGauge + 1\n                                }\n                            })\n                        }\n                    }, 250)})\n                }\n            } else if(e.code === \"ArrowRight\") {\n                    //get the right border of the playable area in screen location\n                    const rightBorder = (window.innerWidth/2) + (320/2);// half of the screen plus halfof the playable area\n                    // console.log(rightBorder);\n                    const curPos = this.getPlayerCurPos();\n                    // this is not working to well //couldnt figure out why; solution if they touch wall they die\n                    if( curPos.x + curPos.width >= rightBorder){//if the player reachs the border \n                        console.log(\"should stop; down rightwalldeath\");\n                        this.gameOver();\n                        // console.log(\"touch wall die\") //start some event here to say game over\n                        this.stopMovement({x: rightBorder - curPos.width, y: this.state.playerTargetY}, 0);//stop them there and raise the flag on the rightborder\n                        \n                        \n                    } else {\n                        this.lateralMove(window.innerWidth);// start to move right\n                    }\n            } else if(e.code === \"ArrowLeft\") {\n                    const leftBorder = (window.innerWidth/2) - (320/2);\n                    // console.log(leftBorder);\n                    const curPos = this.getPlayerCurPos();\n                    if (curPos.x <= leftBorder) {\n                        console.log(\"should stop; down leftwalldeath\");\n                        this.gameOver();\n                        // console.log(\"touch wall die\")// start some event here to say gameover\n                        this.stopMovement({x: leftBorder, y: this.state.playerTargetY}, 0);//stop them there and raise the flag on the leftborder\n                        \n                    } else {  \n                        this.lateralMove(0);// start to move left\n                    }\n\n            }\n        });\n\n        document.addEventListener('keyup', (e) => {\n            // console.log(e.code);\n            if(e.code === \"Space\") {//when they let go of space \n                clearInterval(this.state.gauge);//stop the intervals and the gauge\n                this.jump(-840);//do the jump\n                this.setState({gauge: null, jumpGauge: 5})//set the gauge to initial value\n            } else if(e.code === \"ArrowRight\") {\n                \n                const rightBorder = (window.innerWidth/2) + (320/2);\n                const curPos = this.getPlayerCurPos();\n                if( curPos.x + curPos.width >= rightBorder){\n                    console.log(\"should stop; up rightwalldeath\");\n                    this.gameOver();\n                    this.stopMovement({x: rightBorder - curPos.width, y: this.state.playerTargetY}, 0);\n\n                } else {\n                    this.stopMovement(this.getPlayerCurPos());\n                }\n                if(this.state.playerFalling === true ){\n                    this.checkAllPlatforms();\n\n                }\n               \n            } else if(e.code === \"ArrowLeft\") {\n                const leftBorder = (window.innerWidth/2) - (320/2);\n                const curPos = this.getPlayerCurPos();\n                if (curPos.x <= leftBorder) {\n                    console.log(\"should stop; up lefttwalldeath\");\n                    this.gameOver();\n                    return this.stopMovement({x: leftBorder, y: this.state.playerTargetY}, 0);\n                }else {\n                    this.stopMovement(this.getPlayerCurPos());\n                }\n                if(this.state.playerFalling === true ){\n                    this.checkAllPlatforms();\n\n                }\n            }\n        });\n        \n        // this is just for testing if press right click screen toggle going down\n        document.addEventListener('contextmenu', () => {\n            // console.log(\"desceu\");\n            const scroll = document.querySelector(\".game\");\n  \n            if(!this.state.movementToggle){ \n                // console.log(\"test1\");\n                const levelMovement = setInterval(() => {\n                    if(scroll.scrollTop === 0) {\n                        // console.log(\"test2\");\n                        clearInterval(this.state.movementFunc)\n                        this.setState({movementToggle: false});\n                        return\n                    }\n                    scroll.scrollTop -=0.1\n                    if (this.state.playerJumping) {\n                        \n                    } else if (this.state.playerFalling) {\n                        const playerCurPos = this.getPlayerCurPos();\n                        const distance = (this.state.playerTargetY + 1) - playerCurPos.y;\n                        if (distance < 10) {\n                            // console.log(\"faster\" + distance);\n                            this.setState({playerTargetY: this.state.playerTargetY + 1, speed: 0.2, playerTargetX: playerCurPos.x })\n                            return\n                        }\n                        this.setState({playerTargetY: this.state.playerTargetY + 1})\n                    } else {\n                        const playerCurPos = this.getPlayerCurPos();\n                        this.setState({playerTargetY: this.state.playerTargetY + 1, speed: 0, playerTargetX: playerCurPos.x })\n                    }\n                    \n                }, 200);\n                this.setState({movementToggle: true, movementFunc: levelMovement}); \n            } else {\n                // console.log(\"test2\");\n                clearInterval(this.state.movementFunc)\n                this.setState({movementToggle: false});\n            }\n                    \n          });\n\n    }\n\n    render(){\n        return(\n            <>\n            <GetGameState status={this.state.gameStatus} points={this.state.points}/>\n            <Player playerInfo={this.state}/>\n            <section className='game'>\n                <DeathZone display={this.state.isScrolling}/>\n                <PlatformContainer status={this.state.gameStatus} curPlatform={(this.state.curPlatform ? this.state.curPlatform.getAttribute(\"id\") : 0)} reset={this.props.reset}/>\n            </section>\n            </> \n        )\n    }\n}\n\nexport default Game;","import React from 'react';\nimport './LeftSection.css'\n\n\nfunction LeftSection() {\n    return (\n\n        <section className=\"left--section\">\n            <h1>Tepid Tower</h1>\n        </section>   \n    )\n    \n}\n\nexport default LeftSection;","const URL =process.env.REACT_APP_API_URL\n\nclass AuthModel {\n    static register = data => {\n        return fetch(`${URL}/register`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }).then(response => response.json());\n      };\n\n    static login = data => {\n        return fetch(`${URL}/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n    static show = () => {\n        return fetch(`${URL}/profile`, {\n            method: \"GET\",\n            headers: {\n                // \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${localStorage.uid}`,\n            },\n            // body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n    static edit = data => {\n        return fetch(`${URL}/profile/edit`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${localStorage.uid}`,\n\n            },\n            body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n    static addScore = data => {\n        return fetch(`${URL}/profile/addscore`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${localStorage.uid}`,\n\n            },\n            body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n    static delete = data => {\n        return fetch(`${URL}/user/delete`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${localStorage.uid}`,\n\n            },\n            body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n\n}\n\nexport default AuthModel;","import React, { useEffect, useRef }  from 'react';\n\nimport {gameState} from \"../../recoil/atoms\"\nimport {useRecoilState} from \"recoil\";\nimport {resetState} from \"../../recoil/atoms\"\n\n\nfunction GetResetState(props) {\n\n    const [gameStatus,setGameStatus] = useRecoilState(gameState);\n    const [reset,setResetStatus] = useRecoilState(resetState);\n\n    const prevResetRef = useRef();\n    useEffect(() => {\n        prevResetRef.current = reset;\n    });\n    const prevReset = prevResetRef.current;\n\n\n    useEffect(function () {\n        // setPoints(props.reset);\n        console.log(reset);\n        setResetStatus(props.reset);\n        console.log(\"reseting game\", prevReset, props, reset);\n        \n    },[props]);\n\n    return null\n\n}\n\nexport default GetResetState;","import React from \"react\"\n\nimport \"./ControlsModal.css\"\n\nfunction ControlsModal(props) {\n\n    return (\n\n        <div className=\"controls--modal modal\">\n\n            {/* {(this.state.curUser ? <h2>{this.state.curUser.profile.highscore}</h2>: \"\" )} */}\n            <div>\n                <h2>CONTROLS</h2>\n                <div>\n                    <h3>USE THE ARROWS KEY TO MOVE</h3>\n\n                    <div>imageofarrowskeys</div>\n\n                </div>\n            </div>\n\n            <div>\n                <h3>USE SPACEBAR TO JUMP... THE LONGER YOU HOLD, THE HIGHER YOU WILL JUMP</h3>\n\n                <div>imageofspacebar</div>\n                \n            </div>\n\n        </div>\n    )\n    \n}\n\nexport default ControlsModal;","const URL =process.env.REACT_APP_API_URL\n\nclass LeaderboardModel {\n\n    static showGlobal = () => {\n        return fetch(`${URL}/leaderboard/global`, {\n            method: \"GET\",\n            // headers: {\n            //     // \"Content-Type\": \"application/json\",\n            //     authorization: `Bearer ${localStorage.uid}`,\n            // },\n            // body:JSON.stringify(data),\n        }).then(response => response.json());\n\n    };\n}\n\nexport default LeaderboardModel;","import React, {useState, useEffect} from \"react\"\n\nimport \"./LeaderboardModal.css\"\n\nimport LeaderboardModel from \"../../models/leaderboard\";\nimport { userState } from \"../../recoil/atoms\"\n\nfunction LeaderboardModal(props) {\n\n    const [users, setUsers] = useState([]);\n\n    function getUsers() {\n        LeaderboardModel.showGlobal().then(json => {\n            console.log(json.curProfiles)\n            const array = json.curProfiles;\n            // array.sort((b,a) => a.profile.highscore - b.profile.highscore)\n            setUsers(array);\n            console.log(users);\n        })\n    }\n\n    useEffect(function () {\n        getUsers()\n    }, [])\n\n    function fetchBoard() {\n        getUsers();\n    }   \n\n    return (\n\n        <div onClick={() => fetchBoard()} className=\"leaderboard--modal modal\">\n                <h2>LEADERBOARDS</h2>\n                \n                <div>\n                    <table>\n                        <tr>\n                            {/* {users.length ? users[0].email : -1} */}\n                            <th>Username</th>\n                            <th>Score</th>\n                            <th>Country</th>\n                        </tr>\n                        {users.map((item) => {\n                                return <tr>\n                                            <td>{item.username}</td>\n                                            <td>{item.highscore}</td>\n                                            <td>{item.country}</td>\n                                        </tr>\n                            })} \n                    </table>\n                </div>\n        </div>\n    )\n    \n}\n\nexport default LeaderboardModal;","import React from 'react';\nimport './RightSection.css'\n\nimport AuthModel from \"../../models/auth\";\n\nimport GetResetState from \"../../recoil/components/GetResetState\";\nimport ControlsModal from \"../ControlsModal/ControlsModal\"\nimport LeaderboardModal from \"../LeaderboardModal/LeaderboardModal\"\n\n\nclass RightSection extends React.Component {\n\n    state = {\n        reset: false,\n\n        curUser:null,\n\n        username: \"e\",\n        email: \"\",\n        country: \"\",\n        password: \"\"\n    }\n\n    componentDidMount() {\n        \n    }\n\n    componentDidUpdate(prevProps) {\n        console.log(\"humm\");\n        console.log(this.props.user);\n        console.log(prevProps.user);\n        if (this.props.user !== prevProps.user) {\n            console.log(\"humm\");\n            this.setState({\n                curUser: this.props.user,\n                curUser: this.props.user, \n                country: this.props.user.profile.country,\n                username: this.props.user.profile.username,\n                password: \"\"\n                })   \n        }\n\n        console.log(this.props);\n        console.log(this.state);\n        if (!this.props.gameStatus) {\n            const popUp = document.querySelector(\".user--modal\");\n            if (popUp.style.display === \"flex\") {\n                return\n            }\n            console.log(\"gameover\");\n            console.log(this.props.points)\n            if (this.state.curUser) {\n                AuthModel.addScore({score: this.props.points}).then(json => {\n                    console.log(json);\n\n                    if (json.message === \"score\") {\n                        \n                        this.userModal(\"gameover--score--modal\");\n\n                    } else if(json.message === \"highscore\") {\n\n                        this.userModal(\"gameover--highscore--modal\");\n                    }\n                })\n            } else  {\n\n                this.userModal(\"gameover--highscore--modal\");\n            \n            }\n        } else {\n            // console.log(this.props)\n            if(this.state.reset === true) {\n\n                this.setState({reset: false});\n            }\n        }\n    }\n\n    userModal = (class_name) => {\n\n        const popUps = document.querySelectorAll(\".modal\");\n        // console.log(popUps);\n\n        if (class_name === \"user--modal--logged\") {\n            AuthModel.show().then(json => {\n                console.log(json);\n                if (json.field) {\n                    const form = document.querySelector(\".signup\");\n                    return form.appendChild(this.createErrorMessage(json.message));\n                }\n                this.setState({curUser: json.curUser });\n            });\n        }\n\n\n\n        for (let i = 0; i < popUps.length; i++) {\n            if (popUps[i].classList.contains(class_name)) {\n                // console.log(\"true\");\n                // console.log(popUps[i].style.display)\n                if (popUps[i].style.display === \"flex\") {\n                    \n                    popUps[i].style.display = \"none\";\n                    const error = document.querySelector(\".error--message\");\n                    if(error) error.remove();\n                    // break\n                } else {\n                    // console.log(popUps[i])\n                    popUps[i].style.display = \"flex\";\n                }\n                // break\n            } else {\n                // if (popUps[i].style.display === \"flex\") {\n                    \n                //     popUps[i].style.display = \"none\";\n                //     break\n                // }\n                popUps[i].style.display = \"none\";\n                const error = document.querySelector(\".error--message\");\n                if(error) error.remove();\n            }\n           \n        }\n\n\n    }\n\n    handleUserOpt = (event) => {\n        // event.preventDefault();\n        //sends user info to be registered\n        event.stopPropagation();\n        if (!this.props.gameStatus) {\n            return//if on game over icon wont work\n        }\n        if (this.state.curUser) {\n            \n            console.log(event.target);   \n            \n            this.userModal(\"user--modal--logged\");\n        } else {\n            console.log(event.target);   \n            \n            this.userModal(\"user--modal\");\n        }\n    }\n\n    handleLeaderboardOpt = (event) => {\n        // event.preventDefault();\n        //sends user info to be registered\n        event.stopPropagation();\n        if (!this.props.gameStatus) {\n            return//if on game over icon wont work\n        } \n        \n        this.userModal(\"leaderboard--modal\");\n    \n    }\n\n    handleControlsOpt = (event) => {\n        // event.preventDefault();\n        //sends user info to be registered\n        event.stopPropagation();\n        if (!this.props.gameStatus) {\n            return//if on game over icon wont work\n        }  \n            \n        this.userModal(\"controls--modal\");\n    \n    }\n\n    createErrorMessage = (message) => {\n\n        let element = document.createElement(\"p\");\n        element.appendChild(document.createTextNode(message));\n        element.setAttribute(\"class\", \"error--message\");\n        return element;\n    }\n\n    handleSubmit = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        console.log(event.target.getAttribute(\"class\"));\n        \n        if (event.target.getAttribute(\"class\")===\"signup\") {\n\n            const form =this.state;\n            delete form.curUser;\n            delete form.reset;\n            AuthModel.register(form).then(json => {\n                console.log(json);\n                if (json.field) {\n                    const form = document.querySelector(\".signup\");\n                    return form.appendChild(this.createErrorMessage(json.message));\n                }\n            });\n            this.setState({password: \"\"});\n        } else if(event.target.getAttribute(\"class\")===\"login\"){\n            AuthModel.login({email:this.state.email, password: this.state.password}).then(json => {\n                console.log(json);\n                const error = document.querySelector(\".error--message\");\n                if(error) error.remove();\n                if (json.field) {\n                    const form = document.querySelector(\".login\");\n                    return form.appendChild(this.createErrorMessage(json.message));\n                }\n\n                this.setState({\n                    curUser: json.foundUser, \n                    country: json.foundUser.profile.country,\n                    username: json.foundUser.profile.username,\n                    password: \"\"\n                    })\n                localStorage.setItem(\"uid\", json.signedJwt);\n                return this.userModal(\"user--modal--logged\");\n            })\n        } else if(event.target.getAttribute(\"class\")===\"edit--user\"){\n            AuthModel.edit({username: this.state.username, country: this.state.country}).then(json => {\n                console.log(json);\n                if (json.field) {\n                    const form = document.querySelector(\".edit--user\");\n                    return form.appendChild(this.createErrorMessage(json.message));\n                }\n                this.setState({\n                    curUser: json.updatedUser, \n                    country: json.updatedUser.profile.country,\n                    username: json.updatedUser.profile.username,\n                });\n                const error = document.querySelector(\".error--message\");\n                if(error) error.remove();\n                return\n            })\n\n        } else if(event.target.classList.contains(\"logout\")) {\n            \n            this.userModal();\n            this.setState({\n                curUser: null, \n                country: \"\",\n                username: \"\",\n                email: \"\",\n                password: \"\"\n                })\n            localStorage.removeItem(\"uid\");\n\n        } else if(event.target.classList.contains(\"delete\")) {\n            AuthModel.delete().then(json => {\n                console.log(json);\n                if (json.field) {\n                    const form = document.querySelector(\".edit--user\");\n                    return form.appendChild(this.createErrorMessage(json.message));\n                }\n                this.userModal();\n                this.setState({\n                    curUser: null, \n                    country: \"\",\n                    username: \"\",\n                    email: \"\",\n                    password: \"\"\n                    })\n                localStorage.removeItem(\"uid\");\n            })\n        }\n          \n    }\n\n    handleGameOverModal = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        console.log(event.target);\n        console.log(event.target.getAttribute(\"class\"));\n        \n        if (event.target.getAttribute(\"class\")===\"playagain\") {\n            this.setState({reset: true})\n            this.userModal(\"\");\n            console.log(this.state.reset)\n        }   \n\n    }\n\n    render () {\n        return (\n\n            <section className=\"section--right\">\n                <aside className=\"aside--top\">\n                    <div className=\"icon\"><i class=\"fa fa-cog\"></i></div>\n                    <div className=\"icon\" onClick={this.handleLeaderboardOpt} ><i class=\"fa fa-trophy\"></i></div>\n                    <div className=\"icon\" onClick={this.handleControlsOpt} ><i class=\"fa fa-gamepad fa-lg\"></i></div>\n                </aside>\n                <aside className=\"aside--bottom\">\n                    <div className=\"icon\" onClick={this.handleUserOpt}>\n                    <i class=\"fa fa-user\"></i>\n                    </div>\n                </aside>\n                \n                <GetResetState reset={this.state.reset} />\n\n                <LeaderboardModal />\n                <ControlsModal />\n\n\n\n\n\n\n\n\n                {/* USER MODALS TO BE MADE INTO COMPONENTS */}\n                <div className=\"user--modal modal\">\n                    <form className=\"signup\" onSubmit={this.handleSubmit}>\n                        <div className=\"form--input\">\n                            <label>USERNAME</label>\n                            <input\n                            type=\"text\"\n                            name=\"username\"\n                            required\n                            onChange={e => this.setState({username: e.target.value})}\n                            value={this.username}\n                            />\n                        </div>\n\n                        <div className=\"form--input\">\n                            <label>EMAIL</label>\n                            <input\n                            type=\"email\"\n                            name=\"email\"\n                            required\n                            onChange={e => this.setState({email: e.target.value})}\n                            value={this.email}\n                            />\n                        </div>\n\n                        <div className=\"form--input\">\n                            <label>COUNTRY</label>\n                            <input\n                            type=\"text\"\n                            name=\"country\"\n                            required\n                            onChange={e => this.setState({country: e.target.value})}\n                            value={this.country}\n                            />\n                        </div>\n\n                        <div className=\"form--input\">\n                            <label>PASWORD</label>\n                            <input\n                            type=\"password\"\n                            name=\"password\"\n                            required\n                            onChange={e => this.setState({password: e.target.value})}\n                            value={this.password}\n                            />\n                        </div>\n\n                        <input type=\"submit\" value=\"Register\" />\n                    </form>\n\n                    <form className=\"login\" onSubmit={this.handleSubmit}>\n\n                        <div className=\"form--input\">\n                            <label>EMAIL</label>\n                            <input\n                            type=\"email\"\n                            name=\"email\"\n                            required\n                            onChange={e => this.setState({email: e.target.value})}\n                            value={this.email}\n                            />\n                        </div>\n\n                        <div className=\"form--input\">\n                            <label>PASWORD</label>\n                            <input\n                            type=\"password\"\n                            name=\"password\"\n                            required\n                            onChange={e => this.setState({password: e.target.value})}\n                            value={this.password}\n                            />\n                        </div>\n                        \n                        <input type=\"submit\" value=\"Login\" />\n                    </form>\n                </div>\n\n                <div className=\"user--modal--logged modal\">\n\n                    {(this.state.curUser ? <h2>HIGHSCORE: {this.state.curUser.profile.highscore}</h2>: \"\" )}\n                    <form className=\"edit--user\" onSubmit={this.handleSubmit}>\n\n                        <div className=\"form--input\">\n                            <label>USERNAME</label>\n                            <input\n                            type=\"text\"\n                            name=\"username\"\n                            required\n                            onChange={e => this.setState({username: e.target.value})}\n                            value={this.state.username}\n                            />\n                        </div>\n\n                        <div className=\"form--input\">\n                            <label>COUNTRY</label>\n                            <input\n                            type=\"text\"\n                            name=\"country\"\n                            required\n                            onChange={e => this.setState({country: e.target.value})}\n                            value={this.state.country}\n                            />\n                        </div>\n\n                        \n                        <input type=\"submit\" value=\"EDIT INFO\" />\n                    </form>\n\n                    <form className=\"add--friend\" onSubmit={this.handleSubmit}>\n\n                        <div className=\"form--input\">\n                        <h3>ADD A FRIEND TO YOUR FRIEND'S LIST</h3>\n                            <label>FRIEND's EMAIL</label>\n                            <input\n                            type=\"email\"\n                            name=\"email\"\n                            required\n                            // onChange={e => this.setState({username: e.target.value})}\n                            // value={this.state.username}\n                            />\n                        </div>\n                        \n                        <input type=\"\" value=\"ADD A FRIEND\" />\n                    </form>\n\n                    <div className=\"delete icon\" onClick={this.handleSubmit}><i class=\"delete fa fa-trash\"></i></div>\n                    <div className=\"logout icon\" onClick={this.handleSubmit}><i class=\"logout  fa fa-sign-out\"></i></div>\n                    \n                </div>\n\n                <div className=\"gameover--highscore--modal modal\">\n\n                    {/* {(this.state.curUser ? <h2>{this.state.curUser.profile.highscore}</h2>: \"\" )} */}\n                    <div>\n                        <h2>THE TOWER HAS YOU NOW</h2>\n                        <div>\n                            <h3>HIGHSCORE: {this.props.points}</h3>\n                            <button className=\"playagain\" onClick={this.handleGameOverModal}>PLAY AGAIN</button>\n                        </div>\n                    </div>\n\n                    <div>\n                        <h2>SIGN UP TO ADD YOU SCORE!</h2>\n                        <div>\n                            <button onClick={() => this.userModal(\"user--modal\")}>SIGNUP/LOGIN</button>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"gameover--score--modal modal\">\n\n                    {/* {(this.state.curUser ? <h2>{this.state.curUser.profile.highscore}</h2>: \"\" )} */}\n                    <div>\n                        <h2>THE TOWER HAS YOU NOW</h2>\n                        <div>\n                            <h3>SCORE: {this.props.points}</h3>\n                            <button className=\"playagain\" onClick={this.handleGameOverModal}>PLAY AGAIN</button>\n                        </div>\n                    </div>\n\n                    <div>\n                        <h2>SIGN UP TO ADD YOU SCORE!</h2>\n                        <div>\n                            <button onClick={() => this.userModal(\"user--modal\")}>SIGNUP/LOGIN</button>\n                        </div>\n                    </div>\n\n                </div>\n\n            </section>\n                \n        )\n    }\n    \n}\n\nexport default RightSection;","import React, { useEffect, useRef } from 'react';\nimport './Landing.css'\n\nimport Game from '../components/Game/Game'\nimport LeftSection from '../components/LeftSection/LeftSection'\nimport RightSection from '../components/RightSection/RightSection'\n\nimport {useRecoilState} from \"recoil\";\nimport {resetState, userState} from \"../recoil/atoms\"\nimport {gameState} from \"../recoil/atoms\"\n// import {resetState} from \"../recoil/atoms\"\nimport {userPoints} from \"../recoil/atoms\"\n\nimport AuthModel from \"../models/auth\";\n\n\nfunction Landing() {\n\n    const [user,setUser] = useRecoilState(userState);\n    const [gameStatus,setGameStatus] = useRecoilState(gameState);\n    const [resetStatus,setResetStatus] = useRecoilState(resetState);\n    const [points,setPoints] = useRecoilState(userPoints);\n\n    console.log(resetStatus);\n\n    // const prevStatusRef = useRef();\n    // useEffect(() => {\n    //     prevStatusRef.current = gameStatus;\n    // });\n    // const prevStatus = prevStatusRef.current;\n\n    // useEffect(function () {   \n    //     console.log(resetStatus, gameStatus)\n    //     // if (prevStatus !== gameStatus) {     \n    //         console.log(\"landing user\")\n    //         // if(resetStatus) resetStatus = false\n    //         // if (localStorage.uid) {//if local storage already has a token\n    //         //     AuthModel.show().then(json => {//verify\n    //         //         setUser(json.curUser);//and set the global user state\n    //         //     });\n    //         // }\n    //     // }\n    //   }, [resetStatus]);\n\n      useEffect(function () {   \n        console.log(gameStatus);\n        if (localStorage.uid) {//if local storage already has a token\n            AuthModel.show().then(json => {//verify\n                setUser(json.curUser);//and set the global user state\n            });\n        }\n\n      }, []);\n\n\n\n    return (\n        <div className=\"landing\">\n            <LeftSection />\n            <Game reset={resetStatus}/>\n            <RightSection user={user} gameStatus={gameStatus} points={points} />\n        </div>\n    )\n    \n}\n\nexport default Landing;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {RecoilRoot} from \"recoil\"\n\nimport './index.css';\n// import App from './App';\nimport Landing from './pages/Landing'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <Landing />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}